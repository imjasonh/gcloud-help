NAME
    gcloud parametermanager parameters update - updates the metadata of an
        Parameter Manager parameter resource

SYNOPSIS
    gcloud parametermanager parameters update (PARAMETER : --location=LOCATION)
        [--kms-key=KMS_KEY] [--parameter-format=PARAMETER_FORMAT]
        [--request-id=REQUEST_ID]
        [--labels=[LABELS,...]
          | --update-labels=[UPDATE_LABELS,...] --clear-labels
          | --remove-labels=[__REMOVE_LABELS,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    Update the metadata of a parameter (e.g. labels). This command will return
    an error if you specify a parameter that does not exist.

EXAMPLES
    To update a parameter my-parameter in location global run:

        $ gcloud parametermanager parameters update my-parameter \
            --location=global

POSITIONAL ARGUMENTS
     Parameter resource - Identifier. [Output only] The resource name of the
     Parameter in the format projects/*/locations/*/parameters/*. The arguments
     in this group can be used to specify the attributes of this resource.
     (NOTE) Some attributes are not given arguments in this group but can be
     set in other ways.

     To set the project attribute:
      ◆ provide the argument parameter on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       PARAMETER
          ID of the parameter or fully qualified identifier for the parameter.

          To set the parameter attribute:
          ▸ provide the argument parameter on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          The location id of the parameter resource.

          To set the location attribute:
          ▸ provide the argument parameter on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line.

FLAGS
     Arguments for the kms key.

       --kms-key=KMS_KEY
          Customer managed encryption key (CMEK) to use for encrypting the
          Parameter Versions. If not set, the default Google-managed encryption
          key will be used. Cloud KMS CryptoKeys must reside in the same
          location as the Parameter. The expected format is
          projects/*/locations/*/keyRings/*/cryptoKeys/*.

     --parameter-format=PARAMETER_FORMAT
        Specifies the format of a Parameter. PARAMETER_FORMAT must be one of:

         json
            JSON format.
         unformatted
            Unformatted.
         yaml
            YAML format.

     --request-id=REQUEST_ID
        An optional request ID to identify requests. Specify a unique request
        ID so that if you must retry your request, the server will know to
        ignore the request if it has already been completed. The server will
        guarantee that for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and
        the request times out. If you make the request again with the same
        request ID, the server can check if original operation with the same
        request ID was received, and if so, will ignore the second request.
        This prevents clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID
        is not supported (00000000-0000-0000-0000-000000000000).

     Update labels.

     At most one of these can be specified:

       --labels=[LABELS,...]
          Set labels to new value. Labels as key value pairs.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --labels=string=string

          JSON Example:

              --labels='{"string": "string"}'

          File Example:

              --labels=path_to_file.(yaml|json)

       --update-labels=[UPDATE_LABELS,...]
          Update labels value or add key value pair. Labels as key value pairs.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --update-labels=string=string

          JSON Example:

              --update-labels='{"string": "string"}'

          File Example:

              --update-labels=path_to_file.(yaml|json)

       At most one of these can be specified:

         --clear-labels
            Clear labels value and set to empty map.

         --remove-labels=[__REMOVE_LABELS,...]
            Remove existing value from map labels.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the parametermanager/v1 API. The full documentation for
    this API can be found at:
    https://cloud.google.com/secret-manager/parameter-manager/docs/overview
