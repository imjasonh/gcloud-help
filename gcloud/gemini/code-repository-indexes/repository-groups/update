NAME
    gcloud gemini code-repository-indexes repository-groups update - update the
        configuration of a repository group

SYNOPSIS
    gcloud gemini code-repository-indexes repository-groups update
        (REPOSITORY_GROUP
          : --code-repository-index=CODE_REPOSITORY_INDEX --location=LOCATION)
        [--async] [--request-id=REQUEST_ID]
        [--labels=[LABELS,...]
          | --update-labels=[UPDATE_LABELS,...] --clear-labels
          | --remove-labels=[__REMOVE_LABELS,...]]
        [--repositories=[branchPattern=BRANCHPATTERN],[resource=RESOURCE]
          | --add-repositories=[branchPattern=BRANCHPATTERN],
          [resource=RESOURCE] --clear-repositories
          | --remove-repositories=[branchPattern=BRANCHPATTERN],
          [resource=RESOURCE]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    Update the configuration of a repository group.

EXAMPLES
    To update repository group my-repository-group of code repository index
    instance my-instance in project my-project and location us-central1 with a
    new branch pattern for one of the Git repositories, run:

        $ gcloud gemini code-repository-indexes repository-groups update \
            my-repository-group --code-repository-index=my-instance \
            --project=my-project --location=us-central1 \
            --repositories=branchPattern=new_branch,\
        resource=developerconnect.googleapis.com/projects/<PROJECT>/\
        locations/<LOCATION>/connections/<CONNECTION>/gitRepositoryLinks/\
        <REPOSITORY>

POSITIONAL ARGUMENTS
     RepositoryGroup resource - Identifier. name of resource The arguments in
     this group can be used to specify the attributes of this resource. (NOTE)
     Some attributes are not given arguments in this group but can be set in
     other ways.

     To set the project attribute:
      ◆ provide the argument repository_group on the command line with a
        fully specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       REPOSITORY_GROUP
          ID of the repositoryGroup or fully qualified identifier for the
          repositoryGroup.

          To set the repository_group attribute:
          ▸ provide the argument repository_group on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --code-repository-index=CODE_REPOSITORY_INDEX
          The codeRepositoryIndex id of the repositoryGroup resource.

          To set the code-repository-index attribute:
          ▸ provide the argument repository_group on the command line with a
            fully specified name;
          ▸ provide the argument --code-repository-index on the command line.

       --location=LOCATION
          The location id of the repositoryGroup resource.

          To set the location attribute:
          ▸ provide the argument repository_group on the command line with a
            fully specified name;
          ▸ provide the argument --location on the command line.

FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --request-id=REQUEST_ID
        An optional request ID to identify requests. Specify a unique request
        ID so that if you must retry your request, the server will know to
        ignore the request if it has already been completed. The server will
        guarantee that for at least 60 minutes since the first request.

        The request ID must be a valid UUID with the exception that zero UUID
        is not supported (00000000-0000-0000-0000-000000000000).

     Update labels.

     At most one of these can be specified:

       --labels=[LABELS,...]
          Set labels to new value. Labels as key value pairs.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --labels=string=string

          JSON Example:

              --labels='{"string": "string"}'

          File Example:

              --labels=path_to_file.(yaml|json)

       --update-labels=[UPDATE_LABELS,...]
          Update labels value or add key value pair. Labels as key value pairs.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --update-labels=string=string

          JSON Example:

              --update-labels='{"string": "string"}'

          File Example:

              --update-labels=path_to_file.(yaml|json)

       At most one of these can be specified:

         --clear-labels
            Clear labels value and set to empty map.

         --remove-labels=[__REMOVE_LABELS,...]
            Remove existing value from map labels.

     Update repositories.

     At most one of these can be specified:

       --repositories=[branchPattern=BRANCHPATTERN],[resource=RESOURCE]
          Set repositories to new value. List of repositories to group.

           branchPattern
              The Git branch pattern used for indexing in RE2 syntax. See
              https://github.com/google/re2/wiki/syntax for syntax.

           resource
              The DeveloperConnect repository full resource name, relative
              resource name or resource URL to be indexed.

          Shorthand Example:

              --repositories=branchPattern=string,resource=string --repositories=branchPattern=string,resource=string

          JSON Example:

              --repositories='[{"branchPattern": "string", "resource": "string"}]'

          File Example:

              --repositories=path_to_file.(yaml|json)

       --add-repositories=[branchPattern=BRANCHPATTERN],[resource=RESOURCE]
          Add new value to repositories list. List of repositories to group.

           branchPattern
              The Git branch pattern used for indexing in RE2 syntax. See
              https://github.com/google/re2/wiki/syntax for syntax.

           resource
              The DeveloperConnect repository full resource name, relative
              resource name or resource URL to be indexed.

          Shorthand Example:

              --add-repositories=branchPattern=string,resource=string --add-repositories=branchPattern=string,resource=string

          JSON Example:

              --add-repositories='[{"branchPattern": "string", "resource": "string"}]'

          File Example:

              --add-repositories=path_to_file.(yaml|json)

       At most one of these can be specified:

         --clear-repositories
            Clear repositories value and set to empty list.

         --remove-repositories=[branchPattern=BRANCHPATTERN],[resource=RESOURCE]
            Remove existing value from repositories list. List of repositories
            to group.

             branchPattern
                The Git branch pattern used for indexing in RE2 syntax. See
                https://github.com/google/re2/wiki/syntax for syntax.

             resource
                The DeveloperConnect repository full resource name, relative
                resource name or resource URL to be indexed.

            Shorthand Example:

                --remove-repositories=branchPattern=string,resource=string --remove-repositories=branchPattern=string,resource=string

            JSON Example:

                --remove-repositories='[{"branchPattern": "string", "resource": "string"}]'

            File Example:

                --remove-repositories=path_to_file.(yaml|json)

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the cloudaicompanion/v1 API. The full documentation for
    this API can be found at: https://cloud.google.com/gemini
