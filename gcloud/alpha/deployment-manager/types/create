NAME
    gcloud alpha deployment-manager types create - create a type

SYNOPSIS
    gcloud alpha deployment-manager types create NAME --template=TEMPLATE
        [--async] [--description=DESCRIPTION] [--labels=[KEY=VALUE,...]]
        [--status=STATUS] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) This command inserts (creates) a new composite type based on a
    provided configuration file.

EXAMPLES
    To create a new composite type, run:

        $ gcloud alpha deployment-manager types create my-composite-type \
            --template=my-template.jinja --status=EXPERIMENTAL \
            --description="My type."

POSITIONAL ARGUMENTS
     NAME
        Composite type name.

REQUIRED FLAGS
     --template=TEMPLATE
        Path to a python or jinja file (local or via URL) that defines the
        composite type. If you want to provide a schema, that file must be in
        the same location: e.g. "--template=./foobar.jinja" means
        "./foobar.jinja.schema" should also exist. The file must end in either
        ".jinja" or ".py" to be interpreted correctly.

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --description=DESCRIPTION
        Optional description of the composite type.

     --labels=[KEY=VALUE,...]
        List of label KEY=VALUE pairs to add.

        Keys must start with a lowercase character and contain only hyphens
        (-), underscores (_), lowercase characters, and numbers. Values must
        contain only hyphens (-), underscores (_), lowercase characters, and
        numbers.

     --status=STATUS
        Optional status for a composite type. STATUS must be one of:
        DEPRECATED, EXPERIMENTAL, SUPPORTED.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. This variant is also available:

        $ gcloud beta deployment-manager types create

