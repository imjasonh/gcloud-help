NAME
    gcloud alpha dataplex data-taxonomies get-iam-policy - retrieve a Dataplex
        Data Taxonomy IAM policy

SYNOPSIS
    gcloud alpha dataplex data-taxonomies get-iam-policy
        (DATA_TAXONOMY : --location=LOCATION) [--filter=EXPRESSION]
        [--limit=LIMIT] [--page-size=PAGE_SIZE] [--sort-by=[FIELD,...]]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Displays the IAM policy associated with a Dataplex Data Taxonomy
    resource. If formatted as JSON, the output can be edited and used as a
    policy file for set-iam-policy. The output includes an "etag" field
    identifying the version emitted and allowing detection of concurrent policy
    updates.

EXAMPLES
    To get the IAM policy of a Dataplex Data Taxonomy test-taxonomy in project
    test-project under location us-central1

        $ gcloud alpha dataplex data-taxonomies get-iam-policy \
            test-taxonomy --project=test-project --location=us-central1

POSITIONAL ARGUMENTS
     Data taxonomy resource - Arguments and flags that define the Dataplex Data
     Taxonomy IAM policy you want to retrieve. The arguments in this group can
     be used to specify the attributes of this resource. (NOTE) Some attributes
     are not given arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument data_taxonomy on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       DATA_TAXONOMY
          ID of the data taxonomy or fully qualified identifier for the data
          taxonomy.

          To set the data_taxonomy attribute:
          ▸ provide the argument data_taxonomy on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          Location of the Dataplex resource.

          To set the location attribute:
          ▸ provide the argument data_taxonomy on the command line with a
            fully specified name;
          ▸ provide the argument --location on the command line;
          ▸ set the property dataplex/location.

LIST COMMAND FLAGS
     --filter=EXPRESSION
        Apply a Boolean filter EXPRESSION to each resource item to be listed.
        If the expression evaluates True, then that item is listed. For more
        details and examples of filter expressions, run $ gcloud topic filters.
        This flag interacts with other flags that are applied in this order:
        --flatten, --sort-by, --filter, --limit.

     --limit=LIMIT
        Maximum number of resources to list. The default is unlimited. This
        flag interacts with other flags that are applied in this order:
        --flatten, --sort-by, --filter, --limit.

     --page-size=PAGE_SIZE
        Some services group resource list output into pages. This flag
        specifies the maximum number of resources per page. The default is
        determined by the service if it supports paging, otherwise it is
        unlimited (no paging). Paging may be applied before or after --filter
        and --limit depending on the service.

     --sort-by=[FIELD,...]
        Comma-separated list of resource field key names to sort by. The
        default order is ascending. Prefix a field with ``~'' for descending
        order on that field. This flag interacts with other flags that are
        applied in this order: --flatten, --sort-by, --filter, --limit.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the dataplex/v1 API. The full documentation for this API
    can be found at: https://cloud.google.com/dataplex/docs

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

