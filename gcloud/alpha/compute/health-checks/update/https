NAME
    gcloud alpha compute health-checks update https - update a HTTPS health
        check

SYNOPSIS
    gcloud alpha compute health-checks update https NAME
        [--check-interval=CHECK_INTERVAL] [--description=DESCRIPTION]
        [--enable-logging] [--healthy-threshold=HEALTHY_THRESHOLD]
        [--host=HOST] [--proxy-header=PROXY_HEADER]
        [--request-path=REQUEST_PATH] [--response=RESPONSE]
        [--source-regions=REGION,...,[...]] [--timeout=TIMEOUT]
        [--unhealthy-threshold=UNHEALTHY_THRESHOLD]
        [--weight-report-mode=WEIGHT_REPORT_MODE] [--global | --region=REGION]
        [--port=PORT --port-name=PORT_NAME --use-serving-port]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) gcloud alpha compute health-checks update https is used to update
    an existing HTTPS health check. Only arguments passed in will be updated on
    the health check. Other attributes will remain unaffected.

POSITIONAL ARGUMENTS
     NAME
        Name of the HTTPS health check to update.

FLAGS
     --check-interval=CHECK_INTERVAL
        How often to perform a health check for an instance. For example,
        specifying 10s will run the check every 10 seconds. See $ gcloud topic
        datetimes for information on duration formats.

     --description=DESCRIPTION
        A textual description for the HTTPS health check. Pass in an empty
        string to unset.

     --enable-logging
        Enable logging of health check probe results to Stackdriver. Logging is
        disabled by default.

        Use --no-enable-logging to disable logging.

     --healthy-threshold=HEALTHY_THRESHOLD
        The number of consecutive successful health checks before an unhealthy
        instance is marked as healthy.

     --host=HOST
        The value of the host header used in this HTTP health check request.
        The host header is empty by default. When empty, the health check will
        set the host header to the IP address of the backend VM or endpoint.
        You can set the host header to an empty value to return to this default
        behavior.

     --proxy-header=PROXY_HEADER
        The type of proxy protocol header to be sent to the backend.
        PROXY_HEADER must be one of:

         NONE
            No proxy header is added.
         PROXY_V1
            Adds the header "PROXY UNKNOWN\r\n".

     --request-path=REQUEST_PATH
        The request path that this health check monitors. For example,
        /healthcheck.

     --response=RESPONSE
        When empty, status code of the response determines health. When not
        empty, presence of specified string in first 1024 characters of
        response body determines health. Only ASCII characters allowed.

     --source-regions=REGION,...,[...]
        Defines the list of cloud regions from which health checks are
        performed. This option can be specified only for health checks used
        with DNS Routing Policies. If specified, --check-interval should be at
        least 30 seconds. --proxy-header field and --request field (for TCP)
        are not supported with this option. source-regions is only allowed for
        global health checks. If this option is specified, then the health
        check cannot be used with BackendService nor with managed instance
        group autohealing.

     --timeout=TIMEOUT
        If Google Compute Engine doesn't receive a healthy response from the
        instance by the time specified by the value of this flag, the health
        check request is considered a failure. For example, specifying 10s will
        cause the check to wait for 10 seconds before considering the request a
        failure. See $ gcloud topic datetimes for information on duration
        formats.

     --unhealthy-threshold=UNHEALTHY_THRESHOLD
        The number of consecutive health check failures before a healthy
        instance is marked as unhealthy.

     --weight-report-mode=WEIGHT_REPORT_MODE
        Defines whether Weighted Load Balancing is enabled. WEIGHT_REPORT_MODE
        must be one of: ENABLE, DISABLE, DRY_RUN.

     At most one of these can be specified:

       --global
          If set, the HTTPS health check is global.

       --region=REGION
          Region of the HTTPS health check to update. If not specified, you
          might be prompted to select a region (interactive mode only).

          To avoid prompting when this flag is omitted, you can set the
          compute/region property:

              $ gcloud config set compute/region REGION

          A list of regions can be fetched by running:

              $ gcloud compute regions list

          To unset the property, run:

              $ gcloud config unset compute/region

          Alternatively, the region can be stored in the environment variable
          CLOUDSDK_COMPUTE_REGION.

     These flags configure the port that the health check monitors. If both
     --port and --port-name are specified, --port takes precedence.

       --port=PORT
          The TCP port number that this health check monitors.

       --port-name=PORT_NAME
          The port name that this health check monitors. By default, this is
          empty. Setting this to an empty string will clear any existing
          port-name value.

       --use-serving-port
          If given, use the "serving port" for health checks:

          ▸ When health checking network endpoints in a Network Endpoint
            Group, use the port specified with each endpoint.
            --use-serving-port must be used when using a Network Endpoint Group
            as a backend as this flag specifies the portSpecification option
            for a Health Check object.
          ▸ When health checking other backends, use the port or named port
            of the backend service.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud compute health-checks update https

        $ gcloud beta compute health-checks update https

