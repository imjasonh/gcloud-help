NAME
    gcloud alpha compute health-checks update grpc - update a gRPC health check

SYNOPSIS
    gcloud alpha compute health-checks update grpc NAME
        [--check-interval=CHECK_INTERVAL] [--description=DESCRIPTION]
        [--enable-logging] [--grpc-service-name=GRPC_SERVICE_NAME]
        [--healthy-threshold=HEALTHY_THRESHOLD] [--timeout=TIMEOUT]
        [--unhealthy-threshold=UNHEALTHY_THRESHOLD]
        [--global | --region=REGION] [--port=PORT --use-serving-port]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) gcloud alpha compute health-checks update grpc is used to update an
    existing gRPC health check. Only arguments passed in will be updated on the
    health check. Other attributes will remain unaffected.

POSITIONAL ARGUMENTS
     NAME
        Name of the gRPC health check to update.

FLAGS
     --check-interval=CHECK_INTERVAL
        How often to perform a health check for an instance. For example,
        specifying 10s will run the check every 10 seconds. See $ gcloud topic
        datetimes for information on duration formats.

     --description=DESCRIPTION
        A textual description for the gRPC health check. Pass in an empty
        string to unset.

     --enable-logging
        Enable logging of health check probe results to Stackdriver. Logging is
        disabled by default.

        Use --no-enable-logging to disable logging.

     --grpc-service-name=GRPC_SERVICE_NAME
        An optional gRPC service name string of up to 1024 characters to
        include in the gRPC health check request. Pass in an empty string to
        unset. Only ASCII characters are allowed.

     --healthy-threshold=HEALTHY_THRESHOLD
        The number of consecutive successful health checks before an unhealthy
        instance is marked as healthy.

     --timeout=TIMEOUT
        If Google Compute Engine doesn't receive a healthy response from the
        instance by the time specified by the value of this flag, the health
        check request is considered a failure. For example, specifying 10s will
        cause the check to wait for 10 seconds before considering the request a
        failure. See $ gcloud topic datetimes for information on duration
        formats.

     --unhealthy-threshold=UNHEALTHY_THRESHOLD
        The number of consecutive health check failures before a healthy
        instance is marked as unhealthy.

     At most one of these can be specified:

       --global
          If set, the gRPC health check is global.

       --region=REGION
          Region of the gRPC health check to update. If not specified, you
          might be prompted to select a region (interactive mode only).

          To avoid prompting when this flag is omitted, you can set the
          compute/region property:

              $ gcloud config set compute/region REGION

          A list of regions can be fetched by running:

              $ gcloud compute regions list

          To unset the property, run:

              $ gcloud config unset compute/region

          Alternatively, the region can be stored in the environment variable
          CLOUDSDK_COMPUTE_REGION.

     These flags configure the port that the health check monitors.

       --port=PORT
          The TCP port number that this health check monitors.

       --use-serving-port
          If given, use the "serving port" for health checks:

          ▸ When health checking network endpoints in a Network Endpoint
            Group, use the port specified with each endpoint.
            --use-serving-port must be used when using a Network Endpoint Group
            as a backend as this flag specifies the portSpecification option
            for a Health Check object.
          ▸ When health checking other backends, use the port of the backend
            service.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud compute health-checks update grpc

        $ gcloud beta compute health-checks update grpc

