NAME
    gcloud alpha tasks create-app-engine-task - create and add a task that
        targets App Engine

SYNOPSIS
    gcloud alpha tasks create-app-engine-task [TASK_ID] --queue=QUEUE
        [--header=HEADER_FIELD: HEADER_VALUE] [--location=LOCATION]
        [--method=METHOD] [--routing=KEY:VALUE,[...]]
        [--schedule-time=SCHEDULE_TIME] [--url=URL]
        [--payload-content=PAYLOAD_CONTENT | --payload-file=PAYLOAD_FILE]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Create and add a task that targets App Engine.

EXAMPLES
    To create a task:

        $ gcloud alpha tasks create-app-engine-task --queue=my-queue \
          --url=/handler-path my-task

POSITIONAL ARGUMENTS
     [TASK_ID]
        The task to create.

        If not specified then the system will generate a random unique task ID.
        Explicitly specifying a task ID enables task de-duplication. If a
        task's ID is identical to that of an existing task or a task that was
        deleted or completed recently then the call will fail.

        Because there is an extra lookup cost to identify duplicate task names,
        tasks created with IDs have significantly increased latency. Using
        hashed strings for the task ID or for the prefix of the task ID is
        recommended.

REQUIRED FLAGS
     --queue=QUEUE
        The queue the task belongs to.

OPTIONAL FLAGS
     --header=HEADER_FIELD: HEADER_VALUE
        An HTTP request header. Header values can contain commas. This flag can
        be repeated. Repeated header fields will have their values overridden.

     --location=LOCATION
        The location where we want to manage the queue or task. If not
        specified, uses the location of the current project's App Engine app if
        there is an associated app.

     --method=METHOD
        The HTTP method to use for the request. If not specified, "POST" will
        be used.

     --routing=KEY:VALUE,[...]
        The route to be used for this task. KEY must be at least one of:
        [service, version, instance]. Any missing keys will use the default.

        Routing can be overridden by the queue-level --routing-override flag.

     --schedule-time=SCHEDULE_TIME
        The time when the task is scheduled to be first attempted. Defaults to
        "now" if not specified.

     --url=URL
        The relative URL of the request. Must begin with "/" and must be a
        valid HTTP relative URL. It can contain a path and query string
        arguments. If not specified, then the root path "/" will be used.

     At most one of these can be specified:

       --payload-content=PAYLOAD_CONTENT
          Data payload used by the task worker to process the task.

       --payload-file=PAYLOAD_FILE
          File containing data payload used by the task worker to process the
          task.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud tasks create-app-engine-task

        $ gcloud beta tasks create-app-engine-task

