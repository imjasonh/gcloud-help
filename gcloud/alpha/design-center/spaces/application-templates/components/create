NAME
    gcloud alpha design-center spaces application-templates components create -
        create a component

SYNOPSIS
    gcloud alpha design-center spaces application-templates components create
        (COMPONENT : --application-template=APPLICATION_TEMPLATE
          --location=LOCATION --space=SPACE)
        --shared-template-revision-uri=SHARED_TEMPLATE_REVISION_URI
        [--display-name=DISPLAY_NAME] [--parameters=[key=KEY],[value=VALUE]]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Create a component in an application template.

EXAMPLES
    To create the component my-component in application template
    my-app-template, space my-space, project my-project and location
    us-central1 using a shared template revision, run:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=projects/my-project/locations/\
        us-central1/spaces/my-space/sharedTemplates/my-shared-template/\
        revisions/rev1

    Or run:

        $ gcloud alpha design-center spaces application-templates \
            components create \
            projects/my-project/locations/us-central1/spaces/my-space/\
        applicationTemplates/my-app-template/components/my-component \
            --shared-template-revision-uri=projects/my-project/locations/\
        us-central1/spaces/my-space/sharedTemplates/my-shared-template/\
        revisions/rev1

    To create the component my-component in application template
    my-app-template, space my-space, project my-project and location
    us-central1 using a google shared template google-shared-template and
    revision rev1, run:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=google/google-shared-template/\
        revisions/rev1

    To create the component my-component in application template
    my-app-template, space my-space, project my-project and location
    us-central1 using a google shared template google-shared-template with its
    latest revision, run:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=google/google-shared-template

    To create the component my-component in application template
    my-app-template, space my-space, project my-project and location
    us-central1 using a shared template my-shared-template and revision rev1
    present in the same space, run:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=my-shared-template/revisions/rev1

    To create the component my-component in application template
    my-app-template, space my-space, project my-project and location
    us-central1 using a shared template my-shared-template with its latest
    revision present in the same space, run:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=my-shared-template

    To create the component my-component with a display name My Component in
    application template my-app-template, space my-space, project my-project
    and location us-central1 using a shared template revision, run:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=projects/my-project/locations/\
        us-central1/spaces/my-space/sharedTemplates/my-shared-template/\
        revisions/rev1 --display-name="My Component"

    To create the component my-component with parameter key value pair of
    region:us-central1 in application template my-app-template, space my-space,
    project my-project and location us-central1, run the following shorthand
    example:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=projects/my-project/locations/\
        us-central1/spaces/my-space/sharedTemplates/my-shared-template/\
        revisions/rev1 --parameters=key=region,value=us-central1

    Or run the following JSON example:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=projects/my-project/locations/\
        us-central1/spaces/my-space/sharedTemplates/my-shared-template/\
        revisions/rev1 \
            --parameters='[{"key": "region", "value": "us-central1"}]'

    Or create a YAML or JSON file with the parameters and run the following
    file example:

        $ gcloud alpha design-center spaces application-templates \
            components create my-component \
            --application-template=my-app-template --space=my-space \
            --project=my-project --location=us-central1 \
            --shared-template-revision-uri=projects/my-project/locations/\
        us-central1/spaces/my-space/sharedTemplates/my-shared-template/\
        revisions/rev1 --parameters=my-parameters.yaml

POSITIONAL ARGUMENTS
     Component resource - Identifier. The component name. The arguments in this
     group can be used to specify the attributes of this resource. (NOTE) Some
     attributes are not given arguments in this group but can be set in other
     ways.

     To set the project attribute:
      ◆ provide the argument component on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       COMPONENT
          ID of the component or fully qualified identifier for the component.

          To set the component attribute:
          ▸ provide the argument component on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --application-template=APPLICATION_TEMPLATE
          The applicationTemplate id of the component resource.

          To set the application-template attribute:
          ▸ provide the argument component on the command line with a fully
            specified name;
          ▸ provide the argument --application-template on the command line.

       --location=LOCATION
          The location id of the component resource.

          To set the location attribute:
          ▸ provide the argument component on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line.

       --space=SPACE
          The space id of the component resource.

          To set the space attribute:
          ▸ provide the argument component on the command line with a fully
            specified name;
          ▸ provide the argument --space on the command line.

REQUIRED FLAGS
     --shared-template-revision-uri=SHARED_TEMPLATE_REVISION_URI
        The shared template used to generate the component.

OPTIONAL FLAGS
     --display-name=DISPLAY_NAME
        The component display name.

     --parameters=[key=KEY],[value=VALUE]
        The component parameters.

         key
            The key of the parameter.

         value
            The value of the parameter.

        Shorthand Example:

            --parameters=key=string,value={...} --parameters=key=string,value={...}

        JSON Example:

            --parameters='[{"key": "string", "value": {...}}]'

        File Example:

            --parameters=path_to_file.(yaml|json)

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the designcenter/v1alpha API. The full documentation for
    this API can be found at:
    http://cloud.google.com/application-design-center/docs

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

