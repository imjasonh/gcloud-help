NAME
    gcloud alpha transfer agents install - install Transfer Service agents

SYNOPSIS
    gcloud alpha transfer agents install --pool=POOL [--count=COUNT]
        [--creds-file=CREDS_FILE] [--id-prefix=ID_PREFIX]
        [--logs-directory=LOGS_DIRECTORY; default="/tmp"]
        [--memlock-limit=MEMLOCK_LIMIT; default=64000000]
        [--mount-directories=[MOUNT-DIRECTORIES,...]] [--proxy=PROXY]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Install Transfer Service agents to enable you to transfer data to
    or from POSIX filesystems, such as on-premises filesystems. Agents are
    installed locally on your machine and run inside Docker containers.

EXAMPLES
    To install an agent that authenticates with your user account credentials
    and has default agent parameters, run:

        $ gcloud alpha transfer agents install

    To install an agent that authenticates with a service account with
    credentials stored at '/example/path.json', run:

        $ gcloud alpha transfer agents install \
            --creds-file=/example/path.json

REQUIRED FLAGS
     --pool=POOL
        The agent pool to associate with the newly installed agent. When
        creating transfer jobs, the agent pool parameter will determine which
        agents are activated.

OPTIONAL FLAGS
     --count=COUNT
        Specify the number of agents to install on your current machine. System
        requirements: 8 GB of memory and 4 CPUs per agent.

        Note: If the 'id-prefix' flag is specified, Transfer Service increments
        a number value after each prefix. Example: prefix1, prefix2, etc.

     --creds-file=CREDS_FILE
        Specify the path to the service account's credentials file.

        No input required if authenticating with your user account credentials,
        which Transfer Service will look for in your system.

        Note that the credentials location will be mounted to the agent
        container.

     --id-prefix=ID_PREFIX
        An optional prefix to add to the agent ID to help identify the agent.

     --logs-directory=LOGS_DIRECTORY; default="/tmp"
        Specify the absolute path to the directory you want to store transfer
        logs in. If not specified, gcloud transfer will mount your /tmp
        directory for logs.

     --memlock-limit=MEMLOCK_LIMIT; default=64000000
        Set the agent container's memlock limit. A value of 64000000 (default)
        or higher is required to ensure that agent versions 1.14 or later have
        enough locked memory to be able to start.

     --mount-directories=[MOUNT-DIRECTORIES,...]
        If you want to grant agents access to specific parts of your filesystem
        instead of the entire filesystem, specify which directory paths to
        mount to the agent container. Multiple paths must be separated by
        commas with no spaces (e.g.,
        --mount-directories=/system/path/to/dir1,/path/to/dir2). When mounting
        specific directories, gcloud transfer will also mount a directory for
        logs (either /tmp or what you've specified for --logs-directory) and
        your Google credentials file for agent authentication.

        If this flag is not specified, gcloud transfer will mount your entire
        filesystem to the agent container.

     --proxy=PROXY
        Specify the HTTP URL and port of a proxy server if you want to use a
        forward proxy. For example, to use the URL 'example.com' and port
        '8080' specify 'http://www.example.com:8080/'

        Ensure that you specify the HTTP URL and not an HTTPS URL to avoid
        double-wrapping requests in TLS encryption. Double-wrapped requests
        prevent the proxy server from sending valid outbound requests.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

