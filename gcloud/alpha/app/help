NAME
    gcloud alpha app - manage your App Engine deployments

SYNOPSIS
    gcloud alpha app GROUP | COMMAND [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) The gcloud app command group lets you deploy and manage your Google
    App Engine apps. These commands replace their equivalents in the appcfg
    tool.

    App Engine is a platform for building scalable web applications and mobile
    backends. App Engine provides you with built-in services and APIs such as
    NoSQL datastores, memcache, and a user authentication API, common to most
    applications.

    More information on App Engine can be found here:
    https://cloud.google.com/appengine and detailed documentation can be found
    here: https://cloud.google.com/appengine/docs/

EXAMPLES
    To run your app locally in the development application server to simulate
    your application running in production App Engine with sandbox restrictions
    and services provided by App Engine SDK libraries, use the dev_appserver.py
    command and your app's app.yaml configuration file to run:

        $ dev_appserver.py ~/my_app/app.yaml

    For an in-depth look into using the local development server, follow this
    guide :
    https://cloud.google.com/appengine/docs/standard/python/tools/using-local-server

    To deploy the code and configuration of your app to the App Engine server,
    run:

        $ gcloud alpha app deploy ~/my_app/app.yaml

    To list all versions of all services of your existing deployments, run:

        $ gcloud alpha app versions list

GCLOUD WIDE FLAGS
    These flags are available to all commands: --help.

    Run $ gcloud help for details.

GROUPS
    GROUP is one of the following:

     domain-mappings
        (ALPHA) View and manage your App Engine domain mappings.

     ssl-certificates
        (ALPHA) View and manage your App Engine SSL certificates.

COMMANDS
    COMMAND is one of the following:

     update
        (ALPHA) Updates an App Engine application.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud app

        $ gcloud beta app

