NAME
    gcloud alpha container node-pools config export - export the configuration
        for a Container node pool

SYNOPSIS
    gcloud alpha container node-pools config export
        ([NODE_POOL : --cluster=CLUSTER] --all) [--path=PATH; default="-"]
        [--resource-format=RESOURCE_FORMAT]
        [--location=LOCATION | --region=REGION | --zone=ZONE, -z ZONE]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) gcloud alpha container node-pools config export exports the
    configuration for a Container node pool.

    Node pool configurations can be exported in Kubernetes Resource Model (krm)
    or Terraform HCL formats. The default format is krm.

    Specifying --all allows you to export the configurations for all node pools
    within the project.

    Specifying --path allows you to export the configuration(s) to a local
    directory.

EXAMPLES
    To export the configuration for a node pool, run:

        $ gcloud alpha container node-pools config export my-node-pool

    To export the configuration for a node pool to a file, run:

        $ gcloud alpha container node-pools config export my-node-pool \
            --path=/path/to/dir/

    To export the configuration for a node pool in Terraform HCL format, run:

        $ gcloud alpha container node-pools config export my-node-pool \
            --resource-format=terraform

    To export the configurations for all node pools within a project, run:

        $ gcloud alpha container node-pools config export --all

POSITIONAL ARGUMENTS
     Exactly one of these must be specified:

       Node pool resource - Node pool to export the configuration for. The
       arguments in this group can be used to specify the attributes of this
       resource. (NOTE) Some attributes are not given arguments in this group
       but can be set in other ways.

       To set the project attribute:
        ▸ provide the argument node_pool on the command line with a fully
          specified name;
        ▸ set the property core/project;
        ▸ provide the argument --project on the command line.

       To set the location attribute:
        ▸ provide the argument node_pool on the command line with a fully
          specified name;
        ▸ provide the argument --location on the command line.

         NODE_POOL
            ID of the node pool or fully qualified identifier for the node
            pool.

            To set the node_pool attribute:
            ▫ provide the argument node_pool on the command line.

            This positional argument must be specified if any of the other
            arguments in this group are specified.

         --cluster=CLUSTER
            The name of the cluster

            To set the cluster attribute:
            ▫ provide the argument node_pool on the command line with a fully
              specified name;
            ▫ provide the argument --cluster on the command line.

       --all
          Retrieve all resources within the project. If --path is specified and
          is a valid directory, resources will be output as individual files
          based on resource name and scope. If --path is not specified,
          resources will be streamed to stdout.

FLAGS
     --path=PATH; default="-"
        Path of the directory or file to output configuration(s). To output
        configurations to stdout, specify "--path=-".

     --resource-format=RESOURCE_FORMAT
        Format of the configuration to export. Available configuration formats
        are Kubernetes Resource Model YAML (krm) or Terraform HCL (terraform).
        Command defaults to "krm". RESOURCE_FORMAT must be one of: krm,
        terraform.

     At most one of these can be specified:

       --location=LOCATION
          Compute zone or region (e.g. us-central1-a or us-central1) for the
          cluster. Prefer using this flag over the --region or --zone flags.

       --region=REGION
          Compute region (e.g. us-central1) for a regional cluster.

       --zone=ZONE, -z ZONE
          Compute zone (e.g. us-central1-a) for a zonal cluster. Overrides the
          default compute/zone property value for this command invocation.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

