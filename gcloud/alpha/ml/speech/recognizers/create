NAME
    gcloud alpha ml speech recognizers create - create a speech-to-text
        recognizer

SYNOPSIS
    gcloud alpha ml speech recognizers create
        (RECOGNIZER : --location=LOCATION) --language-codes=[LANGUAGE_CODE,...]
        --model=MODEL [--async] [--audio-channel-count=AUDIO_CHANNEL_COUNT]
        [--display-name=DISPLAY_NAME]
        [--enable-automatic-punctuation=ENABLE_AUTOMATIC_PUNCTUATION]
        [--enable-spoken-emojis=ENABLE_SPOKEN_EMOJIS]
        [--enable-spoken-punctuation=ENABLE_SPOKEN_PUNCTUATION]
        [--enable-word-confidence=ENABLE_WORD_CONFIDENCE]
        [--enable-word-time-offsets=ENABLE_WORD_TIME_OFFSETS]
        [--encoding=ENCODING] [--max-speaker-count=MAX_SPEAKER_COUNT]
        [--min-speaker-count=MIN_SPEAKER_COUNT]
        [--profanity-filter=PROFANITY_FILTER] [--sample-rate=SAMPLE_RATE]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Create a speech-to-text recognizer.

POSITIONAL ARGUMENTS
     Recognizer resource - recognizer. The arguments in this group can be used
     to specify the attributes of this resource. (NOTE) Some attributes are not
     given arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument recognizer on the command line with a fully
        specified name;
      ◆ set the property core/project;
      ◆ provide the argument --project on the command line.

     This must be specified.

       RECOGNIZER
          ID of the recognizer or fully qualified identifier for the
          recognizer.

          To set the recognizer attribute:
          ▸ provide the argument recognizer on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          Location of the recognizer.

          To set the location attribute:
          ▸ provide the argument recognizer on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line.

REQUIRED FLAGS
     --language-codes=[LANGUAGE_CODE,...]
        Language code is one of en-US, en-GB, fr-FR. Check documentation
        (https://cloud.google.com/speech-to-text/docs/multiple-languages) for
        using more than one language code.

     --model=MODEL
        latest_long or latest_short

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete. The default is False.

     --audio-channel-count=AUDIO_CHANNEL_COUNT
        Number of channels present in the audio data sent for recognition.
        Supported for LINEAR16, MULAW, ALAW.

     --display-name=DISPLAY_NAME
        Name of this recognizer as it appears in UIs.

     --enable-automatic-punctuation=ENABLE_AUTOMATIC_PUNCTUATION
        If true, adds punctuation to recognition result hypotheses.

     --enable-spoken-emojis=ENABLE_SPOKEN_EMOJIS
        If true, adds spoken emoji formatting.

     --enable-spoken-punctuation=ENABLE_SPOKEN_PUNCTUATION
        If true, replaces spoken punctuation with the corresponding symbols in
        the request.

     --enable-word-confidence=ENABLE_WORD_CONFIDENCE
        If true, the top result includes a list of words and the confidence for
        those words.

     --enable-word-time-offsets=ENABLE_WORD_TIME_OFFSETS
        If true, the top result includes a list of words and their timestamps.

     --encoding=ENCODING
        Encoding format of the provided audio. For headerless formats, must be
        set to LINEAR16, MULAW, or ALAW. For other formats, set to AUTO.

     --max-speaker-count=MAX_SPEAKER_COUNT
        Maximum number of speakers in the conversation.

     --min-speaker-count=MIN_SPEAKER_COUNT
        Minimum number of speakers in the conversation.

     --profanity-filter=PROFANITY_FILTER
        If true, the server will censor profanities.

     --sample-rate=SAMPLE_RATE
        Sample rate in Hertz of the audio data sent for recognition. Required
        if using explicit decoding.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

