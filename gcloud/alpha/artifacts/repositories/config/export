NAME
    gcloud alpha artifacts repositories config export - export the
        configuration for a Artifact Registry repository

SYNOPSIS
    gcloud alpha artifacts repositories config export
        ([REPOSITORY : --location=LOCATION] --all) [--path=PATH; default="-"]
        [--resource-format=RESOURCE_FORMAT] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) gcloud alpha artifacts repositories config export exports the
    configuration for a Artifact Registry repository.

    Repository configurations can be exported in Kubernetes Resource Model
    (krm) or Terraform HCL formats. The default format is krm.

    Specifying --all allows you to export the configurations for all
    repositories within the project.

    Specifying --path allows you to export the configuration(s) to a local
    directory.

EXAMPLES
    To export the configuration for a repository, run:

        $ gcloud alpha artifacts repositories config export my-repository

    To export the configuration for a repository to a file, run:

        $ gcloud alpha artifacts repositories config export my-repository \
            --path=/path/to/dir/

    To export the configuration for a repository in Terraform HCL format, run:

        $ gcloud alpha artifacts repositories config export my-repository \
            --resource-format=terraform

    To export the configurations for all repositories within a project, run:

        $ gcloud alpha artifacts repositories config export --all

POSITIONAL ARGUMENTS
     Exactly one of these must be specified:

       Repository resource - Repository to export the configuration for. The
       arguments in this group can be used to specify the attributes of this
       resource. (NOTE) Some attributes are not given arguments in this group
       but can be set in other ways.

       To set the project attribute:
        ▸ provide the argument repository on the command line with a fully
          specified name;
        ▸ set the property core/project;
        ▸ provide the argument --project on the command line.

         REPOSITORY
            ID of the repository or fully qualified identifier for the
            repository.

            To set the repository attribute:
            ▫ provide the argument repository on the command line.

            This positional argument must be specified if any of the other
            arguments in this group are specified.

         --location=LOCATION
            Location of the repository. Overrides the default
            artifacts/location property value for this command invocation. To
            configure the default location, use the command: gcloud config set
            artifacts/location.

            To set the location attribute:
            ▫ provide the argument repository on the command line with a
              fully specified name;
            ▫ provide the argument --location on the command line;
            ▫ set the property artifacts/location.

       --all
          Retrieve all resources within the project. If --path is specified and
          is a valid directory, resources will be output as individual files
          based on resource name and scope. If --path is not specified,
          resources will be streamed to stdout.

FLAGS
     --path=PATH; default="-"
        Path of the directory or file to output configuration(s). To output
        configurations to stdout, specify "--path=-".

     --resource-format=RESOURCE_FORMAT
        Format of the configuration to export. Available configuration formats
        are Kubernetes Resource Model YAML (krm) or Terraform HCL (terraform).
        Command defaults to "krm". RESOURCE_FORMAT must be one of: krm,
        terraform.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

