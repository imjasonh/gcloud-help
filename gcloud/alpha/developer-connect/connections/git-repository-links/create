NAME
    gcloud alpha developer-connect connections git-repository-links create -
        create gitRepositoryLinks

SYNOPSIS
    gcloud alpha developer-connect connections git-repository-links create
        (GIT_REPOSITORY_LINK : --connection=CONNECTION --location=LOCATION)
        --clone-uri=CLONE_URI [--annotations=[ANNOTATIONS,...]] [--async]
        [--etag=ETAG] [--labels=[LABELS,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Create a gitRepositoryLink

EXAMPLES
    To create the gitRepositoryLink, run:

    $ gcloud alpha developer-connect connections git-repository-links \        create

POSITIONAL ARGUMENTS
     GitRepositoryLink resource - Identifier. Resource name of the repository,
     in the format projects/*/locations/*/connections/*/gitRepositoryLinks/*.
     The arguments in this group can be used to specify the attributes of this
     resource. (NOTE) Some attributes are not given arguments in this group but
     can be set in other ways.

     To set the project attribute:
      ◆ provide the argument git_repository_link on the command line with a
        fully specified name;
      ◆ set the property core/project;
      ◆ provide the argument --project on the command line.

     This must be specified.

       GIT_REPOSITORY_LINK
          ID of the gitRepositoryLink or fully qualified identifier for the
          gitRepositoryLink.

          To set the git_repository_link attribute:
          ▸ provide the argument git_repository_link on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --connection=CONNECTION
          connections TBD

          To set the connection attribute:
          ▸ provide the argument git_repository_link on the command line with
            a fully specified name;
          ▸ provide the argument --connection on the command line.

       --location=LOCATION
          locations TBD

          To set the location attribute:
          ▸ provide the argument git_repository_link on the command line with
            a fully specified name;
          ▸ provide the argument --location on the command line.

REQUIRED FLAGS
     --clone-uri=CLONE_URI
        Git Clone URI.

OPTIONAL FLAGS
     --annotations=[ANNOTATIONS,...]
        Allows clients to store small amounts of arbitrary data.

         KEY
            Sets KEY value.

         VALUE
            Sets VALUE value.

        Shorthand Example:

            --annotations=string=string

        JSON Example:

            --annotations='{"string": "string"}'

        File Example:

            --annotations=path_to_file.(yaml|json)

     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --etag=ETAG
        This checksum is computed by the server based on the value of other
        fields, and may be sent on update and delete requests to ensure the
        client has an up-to-date value before proceeding.

     --labels=[LABELS,...]
        Labels as key value pairs.

         KEY
            Keys must start with a lowercase character and contain only hyphens
            (-), underscores (_), lowercase characters, and numbers.

         VALUE
            Values must contain only hyphens (-), underscores (_), lowercase
            characters, and numbers.

        Shorthand Example:

            --labels=string=string

        JSON Example:

            --labels='{"string": "string"}'

        File Example:

            --labels=path_to_file.(yaml|json)

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the developerconnect/v1 API. The full documentation for
    this API can be found at:
    http://cloud.google.com/developer-connect/docs/overview

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

