NAME
    gcloud alpha developer-connect connections update - update connections

SYNOPSIS
    gcloud alpha developer-connect connections update
        (CONNECTION : --location=LOCATION) [--allow-missing] [--async]
        [--disabled] [--etag=ETAG] [--request-id=REQUEST_ID] [--secret=SECRET]
        [--validate-only]
        [--annotations=[ANNOTATIONS,...]
          | --update-annotations=[UPDATE_ANNOTATIONS,...] --clear-annotations
          | --remove-annotations=[__REMOVE_ANNOTATIONS,...]]
        [--github-config-app-installation-id=GITHUB_CONFIG_APP_INSTALLATION_ID
          --github-config-authorizer-credential-oauth-token-secret-version=GITHUB_CONFIG_AUTHORIZER_CREDENTIAL_OAUTH_TOKEN_SECRET_VERSION | --gitlab-config-authorizer-credential-user-token-secret-version=GITLAB_CONFIG_AUTHORIZER_CREDENTIAL_USER_TOKEN_SECRET_VERSION --gitlab-config-read-authorizer-credential-user-token-secret-version=GITLAB_CONFIG_READ_AUTHORIZER_CREDENTIAL_USER_TOKEN_SECRET_VERSION]
        [--labels=[LABELS,...]
          | --update-labels=[UPDATE_LABELS,...] --clear-labels
          | --remove-labels=[__REMOVE_LABELS,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Update a connection

EXAMPLES
    To update the connection, run:

        $ gcloud alpha developer-connect connections update

POSITIONAL ARGUMENTS
     Connection resource - Identifier. The resource name of the connection, in
     the format
     projects/{project}/locations/{location}/connections/{connection_id}. The
     arguments in this group can be used to specify the attributes of this
     resource. (NOTE) Some attributes are not given arguments in this group but
     can be set in other ways.

     To set the project attribute:
      ◆ provide the argument connection on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       CONNECTION
          ID of the connection or fully qualified identifier for the
          connection.

          To set the connection attribute:
          ▸ provide the argument connection on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          The location id of the connection resource.

          To set the location attribute:
          ▸ provide the argument connection on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line.

FLAGS
     --allow-missing
        If set to true, and the connection is not found a new connection will
        be created. In this situation update_mask is ignored. The creation will
        succeed only if the input connection has all the necessary information
        (e.g a github_config with both user_oauth_token and installation_id
        properties).

     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --disabled
        If disabled is set to true, functionality is disabled for this
        connection. Repository based API methods and webhooks processing for
        repositories in this connection will be disabled.

     --etag=ETAG
        This checksum is computed by the server based on the value of other
        fields, and may be sent on update and delete requests to ensure the
        client has an up-to-date value before proceeding.

     --request-id=REQUEST_ID
        An optional request ID to identify requests. Specify a unique request
        ID so that if you must retry your request, the server will know to
        ignore the request if it has already been completed. The server will
        guarantee that for at least 60 minutes since the first request.

        For example, consider a situation where you make an initial request and
        the request times out. If you make the request again with the same
        request ID, the server can check if original operation with the same
        request ID was received, and if so, will ignore the second request.
        This prevents clients from accidentally creating duplicate commitments.

        The request ID must be a valid UUID with the exception that zero UUID
        is not supported (00000000-0000-0000-0000-000000000000).

     --secret=SECRET
        For resources [secretVersion], provides fallback value for resource
        secret attribute. When the resource's full URI path is not provided,
        secret will fallback to this flag value.

     --validate-only
        If set, validate the request, but do not actually post it.

     Update annotations.

     At most one of these can be specified:

       --annotations=[ANNOTATIONS,...]
          Set annotations to new value. Allows clients to store small amounts
          of arbitrary data.

           KEY
              Sets KEY value.

           VALUE
              Sets VALUE value.

          Shorthand Example:

              --annotations=string=string

          JSON Example:

              --annotations='{"string": "string"}'

          File Example:

              --annotations=path_to_file.(yaml|json)

       --update-annotations=[UPDATE_ANNOTATIONS,...]
          Update annotations value or add key value pair. Allows clients to
          store small amounts of arbitrary data.

           KEY
              Sets KEY value.

           VALUE
              Sets VALUE value.

          Shorthand Example:

              --update-annotations=string=string

          JSON Example:

              --update-annotations='{"string": "string"}'

          File Example:

              --update-annotations=path_to_file.(yaml|json)

       At most one of these can be specified:

         --clear-annotations
            Clear annotations value and set to empty map.

         --remove-annotations=[__REMOVE_ANNOTATIONS,...]
            Remove existing value from map annotations.

     Arguments for the connection config.

     At most one of these can be specified:

       Configuration for connections to github.com.

         --github-config-app-installation-id=GITHUB_CONFIG_APP_INSTALLATION_ID
            GitHub App installation id.

         Represents an OAuth token of the account that authorized the
         Connection, and associated metadata.

           SecretVersion resource - A SecretManager resource containing the
           OAuth token that authorizes the connection. Format:
           projects/*/secrets/*/versions/*. This represents a Cloud resource.
           (NOTE) Some attributes are not given arguments in this group but can
           be set in other ways.

           To set the project attribute:
            ◇ provide the argument
              --github-config-authorizer-credential-oauth-token-secret-version
              on the command line with a fully specified name;
            ◇ provide the argument --project on the command line;
            ◇ set the property core/project.

           To set the secret attribute:
            ◇ provide the argument
              --github-config-authorizer-credential-oauth-token-secret-version
              on the command line with a fully specified name;
            ◇ provide the argument --secret on the command line.

             --github-config-authorizer-credential-oauth-token-secret-version=GITHUB_CONFIG_AUTHORIZER_CREDENTIAL_OAUTH_TOKEN_SECRET_VERSION
                ID of the secretVersion or fully qualified identifier for the
                secretVersion.

                To set the secret-version attribute:
                ▹ provide the argument
                  --github-config-authorizer-credential-oauth-token-secret-version
                  on the command line.

       Configuration for connections to gitlab.com.

         Represents a personal access token that authorized the Connection, and
         associated metadata.

           SecretVersion resource - A SecretManager resource containing the
           user token that authorizes the Developer Connect connection. Format:
           projects/*/secrets/*/versions/*. This represents a Cloud resource.
           (NOTE) Some attributes are not given arguments in this group but can
           be set in other ways.

           To set the project attribute:
            ◇ provide the argument
              --gitlab-config-authorizer-credential-user-token-secret-version
              on the command line with a fully specified name;
            ◇ provide the argument --project on the command line;
            ◇ set the property core/project.

           To set the secret attribute:
            ◇ provide the argument
              --gitlab-config-authorizer-credential-user-token-secret-version
              on the command line with a fully specified name;
            ◇ provide the argument --secret on the command line.

             --gitlab-config-authorizer-credential-user-token-secret-version=GITLAB_CONFIG_AUTHORIZER_CREDENTIAL_USER_TOKEN_SECRET_VERSION
                ID of the secretVersion or fully qualified identifier for the
                secretVersion.

                To set the secret-version attribute:
                ▹ provide the argument
                  --gitlab-config-authorizer-credential-user-token-secret-version
                  on the command line.

         Represents a personal access token that authorized the Connection, and
         associated metadata.

           SecretVersion resource - A SecretManager resource containing the
           user token that authorizes the Developer Connect connection. Format:
           projects/*/secrets/*/versions/*. This represents a Cloud resource.
           (NOTE) Some attributes are not given arguments in this group but can
           be set in other ways.

           To set the project attribute:
            ◇ provide the argument
              --gitlab-config-read-authorizer-credential-user-token-secret-version
              on the command line with a fully specified name;
            ◇ provide the argument --project on the command line;
            ◇ set the property core/project.

           To set the secret attribute:
            ◇ provide the argument
              --gitlab-config-read-authorizer-credential-user-token-secret-version
              on the command line with a fully specified name;
            ◇ provide the argument --secret on the command line.

             --gitlab-config-read-authorizer-credential-user-token-secret-version=GITLAB_CONFIG_READ_AUTHORIZER_CREDENTIAL_USER_TOKEN_SECRET_VERSION
                ID of the secretVersion or fully qualified identifier for the
                secretVersion.

                To set the secret-version attribute:
                ▹ provide the argument
                  --gitlab-config-read-authorizer-credential-user-token-secret-version
                  on the command line.

     Update labels.

     At most one of these can be specified:

       --labels=[LABELS,...]
          Set labels to new value. Labels as key value pairs.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --labels=string=string

          JSON Example:

              --labels='{"string": "string"}'

          File Example:

              --labels=path_to_file.(yaml|json)

       --update-labels=[UPDATE_LABELS,...]
          Update labels value or add key value pair. Labels as key value pairs.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --update-labels=string=string

          JSON Example:

              --update-labels='{"string": "string"}'

          File Example:

              --update-labels=path_to_file.(yaml|json)

       At most one of these can be specified:

         --clear-labels
            Clear labels value and set to empty map.

         --remove-labels=[__REMOVE_LABELS,...]
            Remove existing value from map labels.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the developerconnect/v1 API. The full documentation for
    this API can be found at:
    http://cloud.google.com/developer-connect/docs/overview

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

