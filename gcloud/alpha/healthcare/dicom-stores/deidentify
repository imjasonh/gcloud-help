NAME
    gcloud alpha healthcare dicom-stores deidentify - de-identify data from the
        source store and write it to the destination store

SYNOPSIS
    gcloud alpha healthcare dicom-stores deidentify
        (DICOM_STORE : --dataset=DATASET --location=LOCATION)
        --destination-store=DESTINATION_STORE [--async]
        [--dicom-filter-tags=[DICOM_FILTER_TAGS,...]]
        [--text-redaction-mode=TEXT_REDACTION_MODE] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) De-identify data from the source store and write it to the
    destination store.

EXAMPLES
    To generate a de-identified version of the DICOM store 'test-dicom-store',
    run the command below.

        $ gcloud alpha healthcare dicom-stores deidentify test-dicom-store \
            --destination-store=projects/{projectId}/locations/us-central1/\
        datasets/{datasetId}/dicomStores/test-deid-dicom-store \
            --dicom-filter-tags=MediaStorageSOPClassUID,SeriesInstanceUID,\
        StudyInstanceUID

POSITIONAL ARGUMENTS
     DicomStore resource - Source Cloud Healthcare API DICOM store to
     deidentify. The arguments in this group can be used to specify the
     attributes of this resource. (NOTE) Some attributes are not given
     arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument dicom_store on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       DICOM_STORE
          ID of the dicomStore or fully qualified identifier for the
          dicomStore.

          To set the dicom_store attribute:
          ▸ provide the argument dicom_store on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --dataset=DATASET
          Cloud Healthcare dataset.

          To set the dataset attribute:
          ▸ provide the argument dicom_store on the command line with a fully
            specified name;
          ▸ provide the argument --dataset on the command line.

       --location=LOCATION
          Google Cloud location.

          To set the location attribute:
          ▸ provide the argument dicom_store on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line;
          ▸ set the property healthcare/location.

REQUIRED FLAGS
     --destination-store=DESTINATION_STORE
        The name of the DICOM store to which the redacted data should be
        written (e.g.,
        projects/{projectId}/locations/{locationId}/datasets/{datasetId}/dicomStores/{dicomStoreId}).
        The destination DICOM store must already exist, or the request will
        fail.

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --dicom-filter-tags=[DICOM_FILTER_TAGS,...]
        Tags to be filtered. Tags must be DICOM Data Elements, File Meta
        Elements, or Directory Structuring Elements, as defined at:
        http://dicom.nema.org/medical/dicom/current/output/html/part06.html#table_6-1,.
        They may be provided by "Keyword" or "Tag". For example "PatientID",
        "0010,0010".

     --text-redaction-mode=TEXT_REDACTION_MODE
        Determines how to redact text from image. TEXT_REDACTION_MODE must be
        (only one value is supported):

         all
            Redact all text.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the healthcare/v1alpha2 API. The full documentation for
    this API can be found at: https://cloud.google.com/healthcare

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud healthcare dicom-stores deidentify

        $ gcloud beta healthcare dicom-stores deidentify

