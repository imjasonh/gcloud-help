NAME
    gcloud alpha healthcare consent-stores get-iam-policy - retrieve the IAM
        policy for a Cloud Healthcare API consent store

SYNOPSIS
    gcloud alpha healthcare consent-stores get-iam-policy
        (CONSENT_STORE : --dataset=DATASET --location=LOCATION)
        [--filter=EXPRESSION] [--limit=LIMIT] [--page-size=PAGE_SIZE]
        [--sort-by=[FIELD,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Retrieve the IAM policy for a Cloud Healthcare API consent store.

EXAMPLES
    To print the IAM policy for the consent store 'test-consent-store', run:

        $ gcloud alpha healthcare consent-stores get-iam-policy \
            test-consent-store --dataset=test-dataset

POSITIONAL ARGUMENTS
     ConsentStore resource - Cloud Healthcare API consent store whose IAM
     policy to fetch. The arguments in this group can be used to specify the
     attributes of this resource. (NOTE) Some attributes are not given
     arguments in this group but can be set in other ways. To set the project
     attribute:
      ◆ provide the argument consent_store on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       CONSENT_STORE
          ID of the consentStore or fully qualified identifier for the
          consentStore. To set the consent_store attribute:
          ▸ provide the argument consent_store on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --dataset=DATASET
          Cloud Healthcare dataset. To set the dataset attribute:
          ▸ provide the argument consent_store on the command line with a
            fully specified name;
          ▸ provide the argument --dataset on the command line.

       --location=LOCATION
          Google Cloud location. To set the location attribute:
          ▸ provide the argument consent_store on the command line with a
            fully specified name;
          ▸ provide the argument --location on the command line;
          ▸ set the property healthcare/location.

LIST COMMAND FLAGS
     --filter=EXPRESSION
        Apply a Boolean filter EXPRESSION to each resource item to be listed.
        If the expression evaluates True, then that item is listed. For more
        details and examples of filter expressions, run $ gcloud topic filters.
        This flag interacts with other flags that are applied in this order:
        --flatten, --sort-by, --filter, --limit.

     --limit=LIMIT
        Maximum number of resources to list. The default is unlimited. This
        flag interacts with other flags that are applied in this order:
        --flatten, --sort-by, --filter, --limit.

     --page-size=PAGE_SIZE
        Some services group resource list output into pages. This flag
        specifies the maximum number of resources per page. The default is
        determined by the service if it supports paging, otherwise it is
        unlimited (no paging). Paging may be applied before or after --filter
        and --limit depending on the service.

     --sort-by=[FIELD,...]
        Comma-separated list of resource field key names to sort by. The
        default order is ascending. Prefix a field with ``~'' for descending
        order on that field. This flag interacts with other flags that are
        applied in this order: --flatten, --sort-by, --filter, --limit.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the healthcare/v1alpha2 API. The full documentation for
    this API can be found at: https://cloud.google.com/healthcare

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud healthcare consent-stores get-iam-policy

        $ gcloud beta healthcare consent-stores get-iam-policy

