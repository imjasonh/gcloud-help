NAME
    gcloud alpha healthcare consent-stores evaluate-user-consents - check the
        consents for a particular user's data

SYNOPSIS
    gcloud alpha healthcare consent-stores evaluate-user-consents
        (CONSENT_STORE : --dataset=DATASET --location=LOCATION)
        --user-id=USER_ID [--consent-list=[CONSENT_LIST,...]]
        [--page-size=PAGE_SIZE] [--page-token=PAGE_TOKEN]
        [--request-attributes=[REQUEST_ATTRIBUTES,...]]
        [--resource-attributes=[RESOURCE_ATTRIBUTES,...]]
        [--response-view=RESPONSE_VIEW] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Check if each matching user data mapping in the given Cloud
    Healthcare API consent store is consented for a given use.

EXAMPLES
    To check if the data for user 'test-user-id' in the consent-store
    'test-consent-store' can be used given request attributes
    {"organization":"admins", "use_case":"research"}, run:

        $ gcloud alpha healthcare consent-stores evaluate-user-consents \
            test-consent-store --user-id=test-user-id \
            --request-attributes=organization=admins,use_case=research \
            --dataset=test-dataset

POSITIONAL ARGUMENTS
     ConsentStore resource - Cloud Healthcare API consent store where the
     requested data is stored. The arguments in this group can be used to
     specify the attributes of this resource. (NOTE) Some attributes are not
     given arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument consent_store on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       CONSENT_STORE
          ID of the consentStore or fully qualified identifier for the
          consentStore.

          To set the consent_store attribute:
          ▸ provide the argument consent_store on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --dataset=DATASET
          Cloud Healthcare dataset.

          To set the dataset attribute:
          ▸ provide the argument consent_store on the command line with a
            fully specified name;
          ▸ provide the argument --dataset on the command line.

       --location=LOCATION
          Google Cloud location.

          To set the location attribute:
          ▸ provide the argument consent_store on the command line with a
            fully specified name;
          ▸ provide the argument --location on the command line;
          ▸ set the property healthcare/location.

REQUIRED FLAGS
     --user-id=USER_ID
        The unique identifier of the user to evaluate consents for.

OPTIONAL FLAGS
     --consent-list=[CONSENT_LIST,...]
        List of user consents to evaluate the access request against. They must
        have the same user_id as the data to check access for, exist in the
        current consent_store, and have a state of either ACTIVE or DRAFT. A
        maximum of 100 consents can be provided here.

     --page-size=PAGE_SIZE
        Limit on the number of user data mappings to return in a single
        response. If zero the default page size of 100 is used.

     --page-token=PAGE_TOKEN
        Token to retrieve the next page of results.

     --request-attributes=[REQUEST_ATTRIBUTES,...]
        Comma-separated list of request attributes associated with this access
        request. Each attribute has the form "KEY=VALUE".

     --resource-attributes=[RESOURCE_ATTRIBUTES,...]
        Comma-separated list of resource attributes associated with this access
        request. Each attribute has the form "KEY=VALUE". If no values are
        specified, then all data types are queried.

     --response-view=RESPONSE_VIEW
        The requested view of information provided in the response (BASIC or
        FULL). RESPONSE_VIEW must be one of: basic, full,
        response-view-unspecified.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the healthcare/v1alpha2 API. The full documentation for
    this API can be found at: https://cloud.google.com/healthcare

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist. These variants are also available:

        $ gcloud healthcare consent-stores evaluate-user-consents

        $ gcloud beta healthcare consent-stores evaluate-user-consents

