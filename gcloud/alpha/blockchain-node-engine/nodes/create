NAME
    gcloud alpha blockchain-node-engine nodes create - create a Blockchain Node
        Engine node

SYNOPSIS
    gcloud alpha blockchain-node-engine nodes create
        (NODE_NAME : --location=LOCATION) [--async]
        [--blockchain-type=BLOCKCHAIN_TYPE; default="ETHEREUM"]
        [--consensus-client=CONSENSUS_CLIENT; default="LIGHTHOUSE"]
        [--execution-client=EXECUTION_CLIENT; default="GETH"]
        [--network=NETWORK; default="MAINNET"]
        [--node-type=NODE_TYPE; default="FULL"] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) Create a new Blockchain Node Engine node with the given name and
    configurations.

    If run asynchronously with --async, exits after printing one operation name
    that can be used to poll the status of the creation via:

        gcloud operations describe

EXAMPLES
    To create a Blockchain Node Engine node with the name my-node in location
    us-central, run:

        $ gcloud alpha blockchain-node-engine nodes create my-node \
          --location=us-central1

POSITIONAL ARGUMENTS
     Node resource - Arguments and flags that specify the Blockchain Node
     Engine node you want to create. The arguments in this group can be used to
     specify the attributes of this resource. (NOTE) Some attributes are not
     given arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument node_name on the command line with a fully
        specified name;
      ◆ set the property core/project;
      ◆ provide the argument --project on the command line.

     This must be specified.

       NODE_NAME
          ID of the node or fully qualified identifier for the node.

          To set the node_name attribute:
          ▸ provide the argument node_name on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          Location of the blockchain node resource.

          To set the location attribute:
          ▸ provide the argument node_name on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line;
          ▸ set the property web3/location.

FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --blockchain-type=BLOCKCHAIN_TYPE; default="ETHEREUM"
        Blockchain type the node will connect run on. BLOCKCHAIN_TYPE must be
        (only one value is supported):

         ethereum
            Ethereum blockchain.

     --consensus-client=CONSENSUS_CLIENT; default="LIGHTHOUSE"
        Consensus client for Ethereum nodes. CONSENSUS_CLIENT must be (only one
        value is supported):

         lighthouse
            Lighthouse execution client.

     --execution-client=EXECUTION_CLIENT; default="GETH"
        Execution client for Ethereum nodes. EXECUTION_CLIENT must be (only one
        value is supported):

         geth
            Geth execution client.

     --network=NETWORK; default="MAINNET"
        Blockchain network the node will connect to. NETWORK must be one of:

         goerli
            Goerli & Prater Ethereum test network.

         holesky
            Holesky Ethereum test network.

         mainnet
            Primary Ethereum network, often referred to as mainnet.

         sepolia
            Sepolia Ethereum test network.

     --node-type=NODE_TYPE; default="FULL"
        Node type - defines whether the node retains only recent data or an
        archival history. NODE_TYPE must be (only one value is supported):

         full
            Node retains full history required for consensus validation,
            however does not retain archival data beyond that.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the blockchainnodeengine/v1 API. The full documentation
    for this API can be found at:
    https://cloud.google.com/blockchain-node-engine

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

