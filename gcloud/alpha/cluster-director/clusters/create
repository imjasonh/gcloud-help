NAME
    gcloud alpha cluster-director clusters create - creates a Cluster Director
        resource

SYNOPSIS
    gcloud alpha cluster-director clusters create
        (CLUSTER : --location=LOCATION)
        (--config=[computeResources=COMPUTERESOURCES],[description=DESCRIPTION],
          [labels=LABELS],[name=NAME],[networkResources=NETWORKRESOURCES],
          [orchestrator=ORCHESTRATOR],[storageResources=STORAGERESOURCES]
          | [--slurm-login-node=[count=COUNT],[enableOSLogin=ENABLEOSLOGIN],
          [enablePublicIPs=ENABLEPUBLICIPS],[labels=LABELS],
          [machineType=MACHINETYPE],[startupScript=STARTUPSCRIPT],[zone=ZONE]
          --slurm-node-sets=[computeId=COMPUTEID],[id=ID],[labels=LABELS],
          [maxDynamicNodeCount=MAXDYNAMICNODECOUNT],
          [startupScript=STARTUPSCRIPT],[staticNodeCount=STATICNODECOUNT]
          --slurm-partitions=[exclusive=EXCLUSIVE],
          [id=ID],[nodesetIds=NODESETIDS]
          (--create-network=[description=DESCRIPTION],[name=NAME]
          | --network=NETWORK --subnet=SUBNET) : --buckets=[BUCKETS,...]
          --create-buckets=[enableAutoclass=ENABLEAUTOCLASS],
          [enableHNS=ENABLEHNS],[name=NAME],[storageClass=STORAGECLASS]
          --create-filestores=[capacityGb=CAPACITYGB],[description=DESCRIPTION],
          [fileshare=FILESHARE],[name=NAME],[protocol=PROTOCOL],[tier=TIER]
          --create-lustres=[capacityGb=CAPACITYGB],
          [description=DESCRIPTION],[filesystem=FILESYSTEM],[name=NAME]
          --description=DESCRIPTION
          --dws-flex-instances=[id=ID],
          [machineType=MACHINETYPE],[maxDuration=MAXDURATION],[zone=ZONE]
          --filestores=[FILESTORES,...] --labels=[LABELS,...]
          --lustres=[LUSTRES,...]
          --on-demand-instances=[id=ID],[machineType=MACHINETYPE],[zone=ZONE]
          --reserved-instances=[id=ID],
          [machineType=MACHINETYPE],[reservation=RESERVATION]
          --slurm-default-partition=SLURM_DEFAULT_PARTITION
          --spot-instances=[id=ID],[machineType=MACHINETYPE],[zone=ZONE]])
        [--async] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (ALPHA) gcloud alpha cluster-director clusters create facilitates the
    creation of a cluster resource.

    There are following ways to create a cluster:
      ▪ [Preferred] Use granular flags to define cluster specs.
      ▪ Use --config flag with cluster specs in JSON format.

    Please refer to the examples below for more details.

EXAMPLES
    To create a cluster my-cluster in location us-central1-a with granular
    flags, run the following example:

        $ gcloud alpha cluster-director clusters create my-cluster \
            --location us-central1-a \
            --description "My cluster description" \
            --labels env=prod,client=gcloud-cli \
            --create-network name=network0 \
            --create-filestores \
            name=locations/us-central1-a/instances/filestore0,\
        tier=BASIC_HDD,capacityGb={filestoreSize},fileshare={fileshare} \
            --filestores locations/us-central1-a/instances/filestore1 \
            --create-buckets name=bucket0 --buckets bucket1 \
            --create-lustres \
            name=locations/us-central1-a/instances/lustre0,\
        capacityGb={lustreSize},filesystem={filesystem} \
            --lustres locations/us-central1-a/instances/lustre1 \
            --reserved-instances \
            id=compute0,machineType={machineType},reservation=zones/\
        us-central1-a/reservations/{reservation} \
            --slurm-login-node \
            machineType={machineType},zone=us-central1-a \
            --slurm-node-sets id=nodeset0,computeId=compute0 \
            --slurm-partitions id=partition0,nodesetIds=[nodeset0] \
            --slurm-default-partition partition0 --format json

    To create a cluster my-cluster in location us-central1-a with config in
    JSON string format run the following example:

        $ gcloud alpha cluster-director clusters create my-cluster \
            --location=us-central1-a --config='{"key": "value"}'

    Or create a JSON file my-cluster-config.json with the cluster specs and run
    the following file example:

        $ gcloud alpha cluster-director clusters create my-cluster \
            --location=us-central1-a --config=my-cluster-config.json

POSITIONAL ARGUMENTS
     Cluster resource - Name of the cluster resource. Formats: cluster |
     projects/{project}/locations/{locations}/clusters/{cluster} The arguments
     in this group can be used to specify the attributes of this resource.
     (NOTE) Some attributes are not given arguments in this group but can be
     set in other ways.

     To set the project attribute:
      ◆ provide the argument cluster on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       CLUSTER
          ID of the cluster or fully qualified identifier for the cluster.

          To set the cluster attribute:
          ▸ provide the argument cluster on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          The location id of the cluster resource.

          To set the location attribute:
          ▸ provide the argument cluster on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line.

REQUIRED FLAGS
     Cluster configuration for provisioning.

     Exactly one of these must be specified:

       --config=[computeResources=COMPUTERESOURCES],[description=DESCRIPTION],[labels=LABELS],[name=NAME],[networkResources=NETWORKRESOURCES],[orchestrator=ORCHESTRATOR],[storageResources=STORAGERESOURCES]
          Configuration of the cluster specs in the form of a JSON object. Sets
          config value.

           computeResources
              Sets computeResources value.

               KEY
                  Sets KEY value.

               VALUE
                  Sets VALUE value.

                   config
                      Sets config value.

                       newDwsFlexInstances
                          Sets newDwsFlexInstances value.

                           machineType
                              Sets machineType value.

                           maxDuration
                              Sets maxDuration value.

                           zone
                              Sets zone value.

                       newFlexStartInstances
                          Sets newFlexStartInstances value.

                           machineType
                              Sets machineType value.

                           maxDuration
                              Sets maxDuration value.

                           zone
                              Sets zone value.

                       newOnDemandInstances
                          Sets newOnDemandInstances value.

                           machineType
                              Sets machineType value.

                           zone
                              Sets zone value.

                       newReservedInstances
                          Sets newReservedInstances value.

                           machineType
                              Sets machineType value.

                           reservation
                              Sets reservation value.

                           type
                              Sets type value.

                           zone
                              Sets zone value.

                       newSpotInstances
                          Sets newSpotInstances value.

                           machineType
                              Sets machineType value.

                           zone
                              Sets zone value.

           description
              Sets description value.

           labels
              Sets labels value.

               KEY
                  Sets KEY value.

               VALUE
                  Sets VALUE value.

           name
              Sets name value.

           networkResources
              Sets networkResources value.

               KEY
                  Sets KEY value.

               VALUE
                  Sets VALUE value.

                   config
                      Sets config value.

                       existingNetwork
                          Sets existingNetwork value.

                           network
                              Sets network value.

                           subnetwork
                              Sets subnetwork value.

                       newNetwork
                          Sets newNetwork value.

                           description
                              Sets description value.

                           network
                              Sets network value.

           orchestrator
              Sets orchestrator value.

               slurm
                  Sets slurm value.

                   defaultPartition
                      Sets defaultPartition value.

                   loginNodes
                      Sets loginNodes value.

                       count
                          Sets count value.

                       disks
                          Sets disks value.

                           boot
                              Required, sets boot value.

                           sizeGb
                              Sets sizeGb value.

                           sourceImage
                              Sets sourceImage value.

                           type
                              Required, sets type value.

                       enableOsLogin
                          Sets enableOsLogin value.

                       enablePublicIps
                          Sets enablePublicIps value.

                       labels
                          Sets labels value.

                           KEY
                              Sets KEY value.

                           VALUE
                              Sets VALUE value.

                       machineType
                          Sets machineType value.

                       startupScript
                          Sets startupScript value.

                       storageConfigs
                          Sets storageConfigs value.

                           id
                              Sets id value.

                           localMount
                              Sets localMount value.

                       zone
                          Sets zone value.

                   nodeSets
                      Sets nodeSets value.

                       bootDisk
                          Sets bootDisk value.

                           boot
                              Required, sets boot value.

                           sizeGb
                              Sets sizeGb value.

                           sourceImage
                              Sets sourceImage value.

                           type
                              Required, sets type value.

                       id
                          Sets id value.

                       labels
                          Sets labels value.

                           KEY
                              Sets KEY value.

                           VALUE
                              Sets VALUE value.

                       maxDynamicNodeCount
                          Sets maxDynamicNodeCount value.

                       resourceRequestId
                          Sets resourceRequestId value.

                       startupScript
                          Sets startupScript value.

                       staticNodeCount
                          Sets staticNodeCount value.

                       storageConfigs
                          Sets storageConfigs value.

                           id
                              Sets id value.

                           localMount
                              Sets localMount value.

                   partitions
                      Sets partitions value.

                       exclusive
                          Sets exclusive value.

                       id
                          Sets id value.

                       nodeSetIds
                          Sets nodeSetIds value.

           storageResources
              Sets storageResources value.

               KEY
                  Sets KEY value.

               VALUE
                  Sets VALUE value.

                   config
                      Sets config value.

                       existingBucket
                          Sets existingBucket value.

                           bucket
                              Sets bucket value.

                       existingFilestore
                          Sets existingFilestore value.

                           filestore
                              Sets filestore value.

                       existingLustre
                          Sets existingLustre value.

                           lustre
                              Sets lustre value.

                       newBucket
                          Sets newBucket value.

                           autoclass
                              Sets autoclass value.

                               enabled
                                  Sets enabled value.

                           bucket
                              Sets bucket value.

                           hierarchicalNamespace
                              Sets hierarchicalNamespace value.

                               enabled
                                  Sets enabled value.

                           storageClass
                              Sets storageClass value.

                       newFilestore
                          Sets newFilestore value.

                           description
                              Sets description value.

                           fileShares
                              Sets fileShares value.

                               capacityGb
                                  Sets capacityGb value.

                               fileShare
                                  Sets fileShare value.

                           filestore
                              Sets filestore value.

                           protocol
                              Sets protocol value.

                           tier
                              Sets tier value.

                       newLustre
                          Sets newLustre value.

                           capacityGb
                              Sets capacityGb value.

                           description
                              Sets description value.

                           filesystem
                              Sets filesystem value.

                           lustre
                              Sets lustre value.

          Shorthand Example:

              --config=computeResources={string={config={newDwsFlexInstances={machineType=string,maxDuration=string,zone=string},newFlexStartInstances={machineType=string,maxDuration=string,zone=string},newOnDemandInstances={machineType=string,zone=string},newReservedInstances={machineType=string,reservation=string,type=string,zone=string},newSpotInstances={machineType=string,zone=string}}}},description=string,labels={string=string},name=string,networkResources={string={config={existingNetwork={network=string,subnetwork=string},newNetwork={description=string,network=string}}}},orchestrator={slurm={defaultPartition=string,loginNodes={count=int,disks=[{boot=boolean,sizeGb=int,sourceImage=string,type=string}],enableOsLogin=boolean,enablePublicIps=boolean,labels={string=string},machineType=string,startupScript=string,storageConfigs=[{id=string,localMount=string}],zone=string},nodeSets=[{bootDisk={boot=boolean,sizeGb=int,sourceImage=string,type=string},id=string,labels={string=string},maxDynamicNodeCount=int,resourceRequestId=string,startupScript=string,staticNodeCount=int,storageConfigs=[{id=string,localMount=string}]}],partitions=[{exclusive=boolean,id=string,nodeSetIds=[string]}]}},storageResources={string={config={existingBucket={bucket=string},existingFilestore={filestore=string},existingLustre={lustre=string},newBucket={autoclass={enabled=boolean},bucket=string,hierarchicalNamespace={enabled=boolean},storageClass=string},newFilestore={description=string,fileShares=[{capacityGb=int,fileShare=string}],filestore=string,protocol=string,tier=string},newLustre={capacityGb=int,description=string,filesystem=string,lustre=string}}}}

          JSON Example:

              --config='{"computeResources": {"string": {"config": {"newDwsFlexInstances": {"machineType": "string", "maxDuration": "string", "zone": "string"}, "newFlexStartInstances": {"machineType": "string", "maxDuration": "string", "zone": "string"}, "newOnDemandInstances": {"machineType": "string", "zone": "string"}, "newReservedInstances": {"machineType": "string", "reservation": "string", "type": "string", "zone": "string"}, "newSpotInstances": {"machineType": "string", "zone": "string"}}}}, "description": "string", "labels": {"string": "string"}, "name": "string", "networkResources": {"string": {"config": {"existingNetwork": {"network": "string", "subnetwork": "string"}, "newNetwork": {"description": "string", "network": "string"}}}}, "orchestrator": {"slurm": {"defaultPartition": "string", "loginNodes": {"count": int, "disks": [{"boot": boolean, "sizeGb": int, "sourceImage": "string", "type": "string"}], "enableOsLogin": boolean, "enablePublicIps": boolean, "labels": {"string": "string"}, "machineType": "string", "startupScript": "string", "storageConfigs": [{"id": "string", "localMount": "string"}], "zone": "string"}, "nodeSets": [{"bootDisk": {"boot": boolean, "sizeGb": int, "sourceImage": "string", "type": "string"}, "id": "string", "labels": {"string": "string"}, "maxDynamicNodeCount": int, "resourceRequestId": "string", "startupScript": "string", "staticNodeCount": int, "storageConfigs": [{"id": "string", "localMount": "string"}]}], "partitions": [{"exclusive": boolean, "id": "string", "nodeSetIds": ["string"]}]}}, "storageResources": {"string": {"config": {"existingBucket": {"bucket": "string"}, "existingFilestore": {"filestore": "string"}, "existingLustre": {"lustre": "string"}, "newBucket": {"autoclass": {"enabled": boolean}, "bucket": "string", "hierarchicalNamespace": {"enabled": boolean}, "storageClass": "string"}, "newFilestore": {"description": "string", "fileShares": [{"capacityGb": int, "fileShare": "string"}], "filestore": "string", "protocol": "string", "tier": "string"}, "newLustre": {"capacityGb": int, "description": "string", "filesystem": "string", "lustre": "string"}}}}}'

          File Example:

              --config=path_to_file.(yaml|json)

       Flag Configurations to define cluster spec.

         --slurm-login-node=[count=COUNT],[enableOSLogin=ENABLEOSLOGIN],[enablePublicIPs=ENABLEPUBLICIPS],[labels=LABELS],[machineType=MACHINETYPE],[startupScript=STARTUPSCRIPT],[zone=ZONE]
            Parameters to define slurm cluster login node.

            For e.g. --slurm-login-node
            machineType={machineType},zone={zone},count={count},enableOSLogin=true,enablePublicIPs=true,startupScript="echo
            hello",labels="{key1=value1,key2=value2}"

            Defaults:
            ▫ count: 1
            ▫ enableOSLogin: true
            ▫ enablePublicIPs: true

            Note:
            ▫ startupScript:
              ◇ Either str or file_path
              ◇ For file_path, only bash file format (.sh or .bash) is
                supported.
              ◇ For file_path, only absolute path is supported.

              Required, sets slurm_login_node value.

             count
                Sets count value.

             enableOSLogin
                Sets enableOSLogin value.

             enablePublicIPs
                Sets enablePublicIPs value.

             labels
                Sets labels value.

                 KEY
                    Sets KEY value.

                 VALUE
                    Sets VALUE value.

             machineType
                Required, sets machineType value.

             startupScript
                Sets startupScript value.

             zone
                Required, sets zone value.

            Shorthand Example:

                --slurm-login-node=count=int,enableOSLogin=boolean,enablePublicIPs=boolean,labels={string=string},machineType=string,startupScript=string,zone=string

            JSON Example:

                --slurm-login-node='{"count": int, "enableOSLogin": boolean, "enablePublicIPs": boolean, "labels": {"string": "string"}, "machineType": "string", "startupScript": "string", "zone": "string"}'

            File Example:

                --slurm-login-node=path_to_file.(yaml|json)

            This flag argument must be specified if any of the other arguments
            in this group are specified.

         --slurm-node-sets=[computeId=COMPUTEID],[id=ID],[labels=LABELS],[maxDynamicNodeCount=MAXDYNAMICNODECOUNT],[startupScript=STARTUPSCRIPT],[staticNodeCount=STATICNODECOUNT]
            Parameters to define slurm cluster nodeset config.

            For e.g. --slurm-node-sets
            id={nodesetId},computeId={computeId},staticNodeCount={staticNodeCount},maxDynamicNodeCount={maxDynamicNodeCount},startupScript="echo
            hello",labels="{key1=value1,key2=value2}"

            Defaults:
            ▫ staticNodeCount: 1

            Note:
            ▫ startupScript:
              ◇ Either str or file_path
              ◇ For file_path, only bash file format (.sh or .bash) is
                supported.
              ◇ For file_path, only absolute path is supported.

              Required, sets slurm_node_sets value.

             computeId
                Required, sets computeId value.

             id
                Required, sets id value.

             labels
                Sets labels value.

                 KEY
                    Sets KEY value.

                 VALUE
                    Sets VALUE value.

             maxDynamicNodeCount
                Sets maxDynamicNodeCount value.

             startupScript
                Sets startupScript value.

             staticNodeCount
                Sets staticNodeCount value.

            Shorthand Example:

                --slurm-node-sets=computeId=string,id=string,labels={string=string},maxDynamicNodeCount=int,startupScript=string,staticNodeCount=int --slurm-node-sets=computeId=string,id=string,labels={string=string},maxDynamicNodeCount=int,startupScript=string,staticNodeCount=int

            JSON Example:

                --slurm-node-sets='[{"computeId": "string", "id": "string", "labels": {"string": "string"}, "maxDynamicNodeCount": int, "startupScript": "string", "staticNodeCount": int}]'

            File Example:

                --slurm-node-sets=path_to_file.(yaml|json)

            This flag argument must be specified if any of the other arguments
            in this group are specified.

         --slurm-partitions=[exclusive=EXCLUSIVE],[id=ID],[nodesetIds=NODESETIDS]
            Parameters to define slurm cluster partitions.

            For e.g. --slurm-partitions
            id={partitionId},nodesetIds=[{nodesetId1},{nodesetId2}],exclusive=false.

            Required, sets slurm_partitions value.

             exclusive
                Sets exclusive value.

             id
                Required, sets id value.

             nodesetIds
                Required, sets nodesetIds value.

            Shorthand Example:

                --slurm-partitions=exclusive=boolean,id=string,nodesetIds=[string] --slurm-partitions=exclusive=boolean,id=string,nodesetIds=[string]

            JSON Example:

                --slurm-partitions='[{"exclusive": boolean, "id": "string", "nodesetIds": ["string"]}]'

            File Example:

                --slurm-partitions=path_to_file.(yaml|json)

            This flag argument must be specified if any of the other arguments
            in this group are specified.

         --buckets=[BUCKETS,...]
            Reference of existing Google Cloud Storage bucket.

            For e.g. --buckets {bucket-path}

         --create-buckets=[enableAutoclass=ENABLEAUTOCLASS],[enableHNS=ENABLEHNS],[name=NAME],[storageClass=STORAGECLASS]
            Parameters to create a Google Cloud Storage bucket.

            For e.g. --create-buckets name={bucket-path}

            Supported storageClass values:
            ▫ STANDARD
            ▫ NEARLINE
            ▫ COLDLINE
            ▫ ARCHIVE

            Defaults:
            ▫ storageClass: STANDARD

            Note:
            ▫ Either storageClass or enableAutoclass can be set.
            ▫ if enableAutoclass is set, enableHNS should not be set.
            ▫ HNS: Hierarchical namespace.

            Sets create_buckets value.

             enableAutoclass
                Sets enableAutoclass value.

             enableHNS
                Sets enableHNS value.

             name
                Required, sets name value.

             storageClass
                Sets storageClass value.

            Shorthand Example:

                --create-buckets=enableAutoclass=boolean,enableHNS=boolean,name=string,storageClass=string --create-buckets=enableAutoclass=boolean,enableHNS=boolean,name=string,storageClass=string

            JSON Example:

                --create-buckets='[{"enableAutoclass": boolean, "enableHNS": boolean, "name": "string", "storageClass": "string"}]'

            File Example:

                --create-buckets=path_to_file.(yaml|json)

         --create-filestores=[capacityGb=CAPACITYGB],[description=DESCRIPTION],[fileshare=FILESHARE],[name=NAME],[protocol=PROTOCOL],[tier=TIER]
            Parameters to create a filestore instance.

            For e.g. --create-filestores
            name=locations/{location}/instances/{filestore},tier=BASIC_HDD,capacityGb={filestoreSize},fileshare={fileshare}

            Supported tier values:
            ▫ BASIC_HDD
            ▫ BASIC_SSD
            ▫ HIGH_SCALE_SSD
            ▫ ZONAL
            ▫ ENTERPRISE
            ▫ REGIONAL

            Supported protocol values:
            ▫ NFSV3
            ▫ NFSV41
            ▫ If not specified, defaults to NFSV3

            Defaults:
            ▫ protocol: NFSV3.

            Sets create_filestores value.

             capacityGb
                Required, sets capacityGb value.

             description
                Sets description value.

             fileshare
                Required, sets fileshare value.

             name
                Required, sets name value.

             protocol
                Sets protocol value.

             tier
                Required, sets tier value.

            Shorthand Example:

                --create-filestores=capacityGb=int,description=string,fileshare=string,name=string,protocol=string,tier=string --create-filestores=capacityGb=int,description=string,fileshare=string,name=string,protocol=string,tier=string

            JSON Example:

                --create-filestores='[{"capacityGb": int, "description": "string", "fileshare": "string", "name": "string", "protocol": "string", "tier": "string"}]'

            File Example:

                --create-filestores=path_to_file.(yaml|json)

         --create-lustres=[capacityGb=CAPACITYGB],[description=DESCRIPTION],[filesystem=FILESYSTEM],[name=NAME]
            Parameters to create a Lustre instance.

            For e.g. --create-lustres
            name=locations/{location}/instances/{lustre},capacityGb={lustreSize},filesystem={filesystem}.

            Sets create_lustres value.

             capacityGb
                Required, sets capacityGb value.

             description
                Sets description value.

             filesystem
                Required, sets filesystem value.

             name
                Required, sets name value.

            Shorthand Example:

                --create-lustres=capacityGb=int,description=string,filesystem=string,name=string --create-lustres=capacityGb=int,description=string,filesystem=string,name=string

            JSON Example:

                --create-lustres='[{"capacityGb": int, "description": "string", "filesystem": "string", "name": "string"}]'

            File Example:

                --create-lustres=path_to_file.(yaml|json)

         --description=DESCRIPTION
            Description of the cluster.

            For e.g. --description (ALPHA) Creates a Cluster Director resource.

         --dws-flex-instances=[id=ID],[machineType=MACHINETYPE],[maxDuration=MAXDURATION],[zone=ZONE]
            Parameters to define cluster DWS Flex instances.

            For e.g. --dws-flex-instances
            id={computeId},zone={zone},machineType={machineType},maxDuration=10000s.

            Sets dws_flex_instances value.

             id
                Required, sets id value.

             machineType
                Required, sets machineType value.

             maxDuration
                Required, sets maxDuration value.

             zone
                Required, sets zone value.

            Shorthand Example:

                --dws-flex-instances=id=string,machineType=string,maxDuration=string,zone=string --dws-flex-instances=id=string,machineType=string,maxDuration=string,zone=string

            JSON Example:

                --dws-flex-instances='[{"id": "string", "machineType": "string", "maxDuration": "string", "zone": "string"}]'

            File Example:

                --dws-flex-instances=path_to_file.(yaml|json)

         --filestores=[FILESTORES,...]
            Reference of existing filestore instance.

            For e.g. --filestores locations/{location}/instances/{filestore}

         --labels=[LABELS,...]
            Cluster labels as key value pairs.

            For e.g. --labels key1=value1,key2=value2.

            Sets labels value.

             KEY
                Sets KEY value.

             VALUE
                Sets VALUE value.

            Shorthand Example:

                --labels={string=string}

            JSON Example:

                --labels='{"string": "string"}'

            File Example:

                --labels=path_to_file.(yaml|json)

         --lustres=[LUSTRES,...]
            Reference of existing Lustre instance.

            For e.g. --lustres locations/{location}/instances/{lustre}

         --on-demand-instances=[id=ID],[machineType=MACHINETYPE],[zone=ZONE]
            Parameters to define cluster on demand instances.

            For e.g. --on-demand-instances
            id={computeId},zone={zone},machineType={machineType}.

            Sets on_demand_instances value.

             id
                Required, sets id value.

             machineType
                Required, sets machineType value.

             zone
                Required, sets zone value.

            Shorthand Example:

                --on-demand-instances=id=string,machineType=string,zone=string --on-demand-instances=id=string,machineType=string,zone=string

            JSON Example:

                --on-demand-instances='[{"id": "string", "machineType": "string", "zone": "string"}]'

            File Example:

                --on-demand-instances=path_to_file.(yaml|json)

         --reserved-instances=[id=ID],[machineType=MACHINETYPE],[reservation=RESERVATION]
            Parameters to define cluster reserved instances.

            For e.g. --reserved-instances
            id={computeId},reservation=zones/{zone}/reservations/{reservation},machineType={machineType}.

            Sets reserved_instances value.

             id
                Required, sets id value.

             machineType
                Required, sets machineType value.

             reservation
                Required, sets reservation value.

            Shorthand Example:

                --reserved-instances=id=string,machineType=string,reservation=string --reserved-instances=id=string,machineType=string,reservation=string

            JSON Example:

                --reserved-instances='[{"id": "string", "machineType": "string", "reservation": "string"}]'

            File Example:

                --reserved-instances=path_to_file.(yaml|json)

         --slurm-default-partition=SLURM_DEFAULT_PARTITION
            Parameters to define slurm cluster default partition.

            For e.g. --slurm-default-partition {partitionId}

         --spot-instances=[id=ID],[machineType=MACHINETYPE],[zone=ZONE]
            Parameters to define cluster spot instances.

            For e.g. --spot-instances
            id={computeId},zone={zone},machineType={machineType}.

            Sets spot_instances value.

             id
                Required, sets id value.

             machineType
                Required, sets machineType value.

             zone
                Required, sets zone value.

            Shorthand Example:

                --spot-instances=id=string,machineType=string,zone=string --spot-instances=id=string,machineType=string,zone=string

            JSON Example:

                --spot-instances='[{"id": "string", "machineType": "string", "zone": "string"}]'

            File Example:

                --spot-instances=path_to_file.(yaml|json)

         Network configuration for the cluster.

         Exactly one of these must be specified:

           --create-network=[description=DESCRIPTION],[name=NAME]
              Parameters to create a network.

              For e.g. --create-network name={network},description=(ALPHA)
              Creates a Cluster Director resource..

              Sets create_network value.

               description
                  Sets description value.

               name
                  Required, sets name value.

              Shorthand Example:

                  --create-network=description=string,name=string

              JSON Example:

                  --create-network='{"description": "string", "name": "string"}'

              File Example:

                  --create-network=path_to_file.(yaml|json)

           Use an existing network source for the cluster.

             --network=NETWORK
                Reference of existing network name.

                For e.g. --network {network}

                This flag argument must be specified if any of the other
                arguments in this group are specified.

             --subnet=SUBNET
                Reference of existing subnetwork name.

                For e.g. --subnet regions/{region}/subnetworks/{subnetwork}

                This flag argument must be specified if any of the other
                arguments in this group are specified.

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in alpha and might change without notice. If this
    command fails with API permission errors despite specifying the correct
    project, you might be trying to access an API with an invitation-only early
    access allowlist.

