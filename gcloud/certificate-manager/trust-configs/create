NAME
    gcloud certificate-manager trust-configs create - create TrustConfig

SYNOPSIS
    gcloud certificate-manager trust-configs create
        (TRUST_CONFIG : --location=LOCATION)
        (--allowlisted-certificates=[ALLOWLISTED_CERTIFICATES,...]
          --trust-store=[intermediate-cas=INTERMEDIATE-CAS],
          [trust-anchors=TRUST-ANCHORS]) [--async] [--description=DESCRIPTION]
        [--labels=[KEY=VALUE,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    Create a TrustConfig.

EXAMPLES
    To create a TrustConfig from PEM certificate files, run:

        $ gcloud certificate-manager trust-configs create my-trust-config \
            --description="my description" \
            --labels=my-key1=my-value1,my-key2=my-value2 \
            --trust-store=trust-anchors=ta.pem,\
        intermediate-cas="ica1.pem;ica2.pem"

POSITIONAL ARGUMENTS
     TrustConfig resource - Name of the TrustConfig to create. The arguments in
     this group can be used to specify the attributes of this resource. (NOTE)
     Some attributes are not given arguments in this group but can be set in
     other ways.

     To set the project attribute:
      ◆ provide the argument trust_config on the command line with a fully
        specified name;
      ◆ set the property core/project;
      ◆ provide the argument --project on the command line.

     This must be specified.

       TRUST_CONFIG
          ID of the trustConfig or fully qualified identifier for the
          trustConfig.

          To set the trust_config attribute:
          ▸ provide the argument trust_config on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          Certificate Manager location.

          To set the location attribute:
          ▸ provide the argument trust_config on the command line with a
            fully specified name;
          ▸ provide the argument --location on the command line;
          ▸ default value of location is [global].

REQUIRED FLAGS
     At least one of these must be specified:

       --allowlisted-certificates=[ALLOWLISTED_CERTIFICATES,...]
          Allowlisted PEM-encoded certificates. Certificates should be provided
          in files. For multiple file names, separate them by a comma (',').
          One file can contain multiple certificates.

          Examples:

              Single file: --allowlisted-certificates=ac.pem

              Multiple files: --allowlisted-certificates=ac1.pem,ac2.pem

       --trust-store=[intermediate-cas=INTERMEDIATE-CAS],[trust-anchors=TRUST-ANCHORS]
          Trust Store with the given trust anchor and intermediate CA
          PEM-encoded certificates. Certificates should be provided in files.
          For multiple file names, separate them by a semicolon (';') and quote
          them ('"'). One file can contain multiple certificates. Intermediate
          CAs are optional.

          Examples:

              Single files: --trust-store trust-anchors=ta.pem,intermediate-cas=ica.pem

              No intermediate CAs: --trust-store trust-anchors=ta.pem

              Multiple files: --trust-store trust-anchors="ta1.pem;ta2.pem",intermediate-cas="ica1.pem;ica2.pem"

OPTIONAL FLAGS
     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --description=DESCRIPTION
        Human-readable description of the resource.

     --labels=[KEY=VALUE,...]
        List of label KEY=VALUE pairs to add.

        Keys must start with a lowercase character and contain only hyphens
        (-), underscores (_), lowercase characters, and numbers. Values must
        contain only hyphens (-), underscores (_), lowercase characters, and
        numbers.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the certificatemanager/v1 API. The full documentation for
    this API can be found at: https://cloud.google.com/certificate-manager

NOTES
    These variants are also available:

        $ gcloud alpha certificate-manager trust-configs create

        $ gcloud beta certificate-manager trust-configs create

