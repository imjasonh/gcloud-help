NAME
    gcloud database-migration connection-profiles create postgresql - create a
        Database Migration Service connection profile for PostgreSQL

SYNOPSIS
    gcloud database-migration connection-profiles create postgresql
        (CONNECTION_PROFILE : --region=REGION)
        [--alloydb-cluster=ALLOYDB_CLUSTER] [--no-async]
        [--cloudsql-instance=CLOUDSQL_INSTANCE] [--display-name=DISPLAY_NAME]
        [--labels=[KEY=VALUE,...]] [--role=ROLE]
        [--ca-certificate=CA_CERTIFICATE
          : --client-certificate=CLIENT_CERTIFICATE --private-key=PRIVATE_KEY]
        [--host=HOST --port=PORT --username=USERNAME (--password=PASSWORD
          | --prompt-for-password)]
        [--psc-service-attachment=PSC_SERVICE_ATTACHMENT
          | --static-ip-connectivity] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    Create a Database Migration Service connection profile for PostgreSQL.

EXAMPLES
    To create a connection profile my-profile for PostgreSQL:

        $ gcloud database-migration connection-profiles create postgresql \
          my-profile --region=us-central1 --password=123456 \
          --username=my-user --host=1.2.3.4 --port=5432

    If the source is a Cloud SQL database, run:

        $ gcloud database-migration connection-profiles create postgresql \
          my-profile --region=us-central1 --password=123456 \
          --username=my-user --host=1.2.3.4 --port=5432 \
          --cloudsql-instance=my-instance

POSITIONAL ARGUMENTS
     Connection profile resource - The connection profile to create. The
     arguments in this group can be used to specify the attributes of this
     resource. (NOTE) Some attributes are not given arguments in this group but
     can be set in other ways.

     To set the project attribute:
      ◆ provide the argument connection_profile on the command line with a
        fully specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       CONNECTION_PROFILE
          ID of the connection_profile or fully qualified identifier for the
          connection_profile.

          To set the connection_profile attribute:
          ▸ provide the argument connection_profile on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --region=REGION
          The Cloud region for the connection_profile.

          To set the region attribute:
          ▸ provide the argument connection_profile on the command line with
            a fully specified name;
          ▸ provide the argument --region on the command line.

FLAGS
     --alloydb-cluster=ALLOYDB_CLUSTER
        If the destination is an AlloyDB cluster, use this field to provide the
        AlloyDB cluster ID.

     --no-async
        Waits for the operation in progress to complete before returning.

     --cloudsql-instance=CLOUDSQL_INSTANCE
        If the source or destination is a Cloud SQL database, then use this
        field to provide the respective Cloud SQL instance ID.

     --display-name=DISPLAY_NAME
        A user-friendly name for the connection profile. The display name can
        include letters, numbers, spaces, and hyphens, and must start with a
        letter.

     --labels=[KEY=VALUE,...]
        List of label KEY=VALUE pairs to add.

        Keys must start with a lowercase character and contain only hyphens
        (-), underscores (_), lowercase characters, and numbers. Values must
        contain only hyphens (-), underscores (_), lowercase characters, and
        numbers.

     --role=ROLE
        The role of the connection profile. ROLE must be one of: SOURCE,
        DESTINATION.

     --ca-certificate=CA_CERTIFICATE
        x509 PEM-encoded certificate of the CA that signed the database
        server's certificate. The value for this flag needs to be the content
        of the certificate file, not the path to the file. For example, on a
        Linux machine you can use command substitution:
        <code>--ca-certificate=$(</path/to/certificate_file.pem)</code>.
        Database Migration Service will use this certificate to verify it's
        connecting to the correct host. Database Migration Service encrypts the
        value when storing it.

     --client-certificate=CLIENT_CERTIFICATE
        x509 PEM-encoded certificate that will be used by the replica to
        authenticate against the database server. The value for this flag needs
        to be the content of the certificate file, not the path to the file.
        For example, on a Linux machine you can use command substitution:
        <code>--ca-certificate=$(</path/to/certificate_file.pem)</code>.
        Database Migration Service encrypts the value when storing it.

     --private-key=PRIVATE_KEY
        Unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with
        the Client Certificate. The value for this flag needs to be the content
        of the certificate file, not the path to the file. For example, on a
        Linux machine you can use command substitution:
        <code>--ca-certificate=$(</path/to/certificate_file.pem)</code>.
        Database Migration Service encrypts the value when storing it.

     --host=HOST
        IP or hostname of the database. When --psc-service-attachment is also
        specified, this field value should be: 1. For Cloud SQL PSC enabled
        instance - the dns_name field (e.g <uid>.<region>.sql.goog.). 2. For
        Cloud SQL PSA instance (vpc peering) - the private ip of the instance.

     --port=PORT
        Network port of the database.

     --username=USERNAME
        Username that Database Migration Service uses to connect to the
        database. Database Migration Service encrypts the value when storing
        it.

     Exactly one of these must be specified:

       --password=PASSWORD
          Password for the user that Database Migration Service uses to connect
          to the database. Database Migration Service encrypts the value when
          storing it, and the field is not returned on request.

       --prompt-for-password
          Prompt for the password used to connect to the database.

     At most one of these can be specified:

       Service attachment resource - Resource ID of the service attachment.
       This represents a Cloud resource. (NOTE) Some attributes are not given
       arguments in this group but can be set in other ways.

       To set the project attribute:
        ▸ provide the argument --psc-service-attachment on the command line
          with a fully specified name;
        ▸ provide the argument --project on the command line;
        ▸ set the property core/project.

       To set the region attribute:
        ▸ provide the argument --psc-service-attachment on the command line
          with a fully specified name;
        ▸ provide the argument --region on the command line.

         --psc-service-attachment=PSC_SERVICE_ATTACHMENT
            ID of the service_attachment or fully qualified identifier for the
            service_attachment.

            To set the service_attachment attribute:
            ▫ provide the argument --psc-service-attachment on the command
              line.

       --static-ip-connectivity
          use static ip connectivity

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.
