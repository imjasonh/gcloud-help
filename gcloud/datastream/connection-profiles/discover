NAME
    gcloud datastream connection-profiles discover - discover a Datastream
        connection profile

SYNOPSIS
    gcloud datastream connection-profiles discover --location=LOCATION
        (--connection-profile-name=CONNECTION_PROFILE_NAME
          | --connection-profile-object-file=CONNECTION_PROFILE_OBJECT_FILE)
        [--full-hierarchy | --hierarchy-depth=HIERARCHY_DEPTH]
        [--mysql-rdbms-file=MYSQL_RDBMS_FILE
          | --oracle-rdbms-file=ORACLE_RDBMS_FILE
          | --postgresql-rdbms-file=POSTGRESQL_RDBMS_FILE]
        [--recursive | --recursive-depth=RECURSIVE_DEPTH]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    Discover data objects accessible from a Datastream connection profile

EXAMPLES
    To discover an existing connection profile:

        $ gcloud datastream connection-profiles discover \
          CONNECTION_PROFILE --location=us-central1 \
          --connection-profile-name=some-cp --recursive=true

    To discover a non-existing connection profile:

        $ gcloud datastream connection-profiles discover \
          CONNECTION_PROFILE --location=us-central1 \
          --connection-profile-object-file=path/to/yaml/or/json/file

REQUIRED FLAGS
     Location resource - The location you want to list the connection profiles
     for. This represents a Cloud resource. (NOTE) Some attributes are not
     given arguments in this group but can be set in other ways. To set the
     project attribute:
      ◆ provide the argument --location on the command line with a fully
        specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       --location=LOCATION
          ID of the location or fully qualified identifier for the location. To
          set the location attribute:
          ▸ provide the argument --location on the command line.

     Exactly one of these must be specified:

       Connection profile resource - Resource ID of the connection profile.
       This represents a Cloud resource. (NOTE) Some attributes are not given
       arguments in this group but can be set in other ways. To set the project
       attribute:
        ▸ provide the argument --connection-profile-name on the command line
          with a fully specified name;
        ▸ provide the argument --project on the command line;
        ▸ set the property core/project. To set the location attribute:
        ▸ provide the argument --connection-profile-name on the command line
          with a fully specified name;
        ▸ provide the argument --location on the command line.

         --connection-profile-name=CONNECTION_PROFILE_NAME
            ID of the connection_profile or fully qualified identifier for the
            connection_profile. To set the connection_profile attribute:
            ▫ provide the argument --connection-profile-name on the command
              line.

       --connection-profile-object-file=CONNECTION_PROFILE_OBJECT_FILE
          Path to a YAML (or JSON) file containing the configuration for a
          connection profile object. If you pass - as the value of the flag the
          file content will be read from stdin.

OPTIONAL FLAGS
     At most one of these can be specified:

       --full-hierarchy
          Whether to retrieve the full hierarchy of data objects (TRUE) or only
          the current level (FALSE).

       --hierarchy-depth=HIERARCHY_DEPTH
          The number of hierarchy levels below the current level to be
          retrieved.

     At most one of these can be specified:

       --mysql-rdbms-file=MYSQL_RDBMS_FILE
          Path to a YAML (or JSON) file containing the MySQL RDBMS to enrich
          with child data objects and metadata. If you pass - as the value of
          the flag the file content will be read from stdin.

       --oracle-rdbms-file=ORACLE_RDBMS_FILE
          Path to a YAML (or JSON) file containing the Oracle RDBMS to enrich
          with child data objects and metadata. If you pass - as the value of
          the flag the file content will be read from stdin.

       --postgresql-rdbms-file=POSTGRESQL_RDBMS_FILE
          Path to a YAML (or JSON) file containing the PostgreSQL RDBMS to
          enrich with child data objects and metadata. If you pass - as the
          value of the flag the file content will be read from stdin.

     At most one of these can be specified:

       --recursive
          (DEPRECATED) Whether to retrieve the full hierarchy of data objects
          (TRUE) or only the current level (FALSE).

          The --recursive option is deprecated; use --full-hierarchy instead.

       --recursive-depth=RECURSIVE_DEPTH
          (DEPRECATED) The number of hierarchy levels below the current level
          to be retrieved.

          The --recursive-depth option is deprecated; use --hierarchy-depth
          instead.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This variant is also available:

        $ gcloud beta datastream connection-profiles discover

