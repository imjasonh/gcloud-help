NAME
    gcloud beta saas-runtime units update - update a Unit

SYNOPSIS
    gcloud beta saas-runtime units update UNIT [--location=LOCATION]
        [--maintenance-pinned-until-time=MAINTENANCE_PINNED_UNTIL_TIME]
        [--clear-tenant | --tenant=TENANT]
        [--clear-unit-kind | --unit-kind=UNIT_KIND]
        [--labels=[LABELS,...]
          | --update-labels=[UPDATE_LABELS,...] --clear-labels
          | --remove-labels=[__REMOVE_LABELS,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (BETA) Update a Unit

EXAMPLES
    To update the Unit, run:

        $ gcloud beta saas-runtime units update

POSITIONAL ARGUMENTS
     Unit resource - Identifier. The resource name (full URI of the resource)
     following the standard naming scheme:

         "projects/{project}/locations/{location}/units/{unit}" This represents a Cloud resource. (NOTE) Some attributes are not given arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument unit on the command line with a fully specified
        name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     To set the location attribute:
      ◆ provide the argument unit on the command line with a fully specified
        name;
      ◆ provide the argument --location on the command line.

     This must be specified.

       UNIT
          ID of the unit or fully qualified identifier for the unit.

          To set the unit attribute:
          ▸ provide the argument unit on the command line.

FLAGS
     --location=LOCATION
        For resources [unit, tenant, unitKind], provides fallback value for
        resource location attribute. When the resource's full URI path is not
        provided, location will fallback to this flag value.

     Captures requested directives for performing future maintenance on the
     unit. This includes a request for the unit to skip maintenance for a
     period of time and remain pinned to its current release as well as
     controls for postponing maintenance scheduled in future.

       --maintenance-pinned-until-time=MAINTENANCE_PINNED_UNTIL_TIME
          If present, it fixes the release on the unit until the given time;
          i.e. changes to the release field will be rejected. Rollouts should
          and will also respect this by not requesting an upgrade in the first
          place.

     Update tenant.

     At most one of these can be specified:

       --clear-tenant
          Clear tenant value and set to null.

       Tenant resource - Set tenant to new value.

       Reference to the Saas Tenant resource this unit belongs to. This for
       example informs the maintenance policies to use for scheduling future
       updates on a unit. (optional and immutable once created) This represents
       a Cloud resource. (NOTE) Some attributes are not given arguments in this
       group but can be set in other ways.

       To set the project attribute:
        ▸ provide the argument --tenant on the command line with a fully
          specified name;
        ▸ provide the argument --project on the command line;
        ▸ set the property core/project.

       To set the location attribute:
        ▸ provide the argument --tenant on the command line with a fully
          specified name;
        ▸ provide the argument --location on the command line.

         --tenant=TENANT
            ID of the tenant or fully qualified identifier for the tenant.

            To set the tenant attribute:
            ▫ provide the argument --tenant on the command line.

     Update unit_kind.

     At most one of these can be specified:

       --clear-unit-kind
          Clear unit_kind value and set to null.

       UnitKind resource - Set unit_kind to new value.

       Reference to the UnitKind this Unit belongs to. Immutable once set. This
       represents a Cloud resource. (NOTE) Some attributes are not given
       arguments in this group but can be set in other ways.

       To set the project attribute:
        ▸ provide the argument --unit-kind on the command line with a fully
          specified name;
        ▸ provide the argument --project on the command line;
        ▸ set the property core/project.

       To set the location attribute:
        ▸ provide the argument --unit-kind on the command line with a fully
          specified name;
        ▸ provide the argument --location on the command line.

         --unit-kind=UNIT_KIND
            ID of the unitKind or fully qualified identifier for the unitKind.

            To set the unit-kind attribute:
            ▫ provide the argument --unit-kind on the command line.

     Update labels.

     At most one of these can be specified:

       --labels=[LABELS,...]
          Set labels to new value. The labels on the resource, which can be
          used for categorization. similar to Kubernetes resource labels.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --labels=string=string

          JSON Example:

              --labels='{"string": "string"}'

          File Example:

              --labels=path_to_file.(yaml|json)

       --update-labels=[UPDATE_LABELS,...]
          Update labels value or add key value pair. The labels on the
          resource, which can be used for categorization. similar to Kubernetes
          resource labels.

           KEY
              Keys must start with a lowercase character and contain only
              hyphens (-), underscores (_), lowercase characters, and numbers.

           VALUE
              Values must contain only hyphens (-), underscores (_), lowercase
              characters, and numbers.

          Shorthand Example:

              --update-labels=string=string

          JSON Example:

              --update-labels='{"string": "string"}'

          File Example:

              --update-labels=path_to_file.(yaml|json)

       At most one of these can be specified:

         --clear-labels
            Clear labels value and set to empty map.

         --remove-labels=[__REMOVE_LABELS,...]
            Remove existing value from map labels.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the saasservicemgmt/v1beta1 API. The full documentation
    for this API can be found at: https://cloud.google.com/

NOTES
    This command is currently in beta and might change without notice.

