NAME
    gcloud beta saas-runtime saas create - create a SaaS

SYNOPSIS
    gcloud beta saas-runtime saas create (SAAS : --location=LOCATION)
        --locations=[name=NAME] [--labels=[LABELS,...]] [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (BETA) Create a SaaS

EXAMPLES
    To create a new SaaS, run:

        $ gcloud beta saas-runtime saas create saas \
            --locations=name=us-central2 --locations=name=europe-west1

POSITIONAL ARGUMENTS
     Saas resource - Identifier. The resource name (full URI of the resource)
     following the standard naming scheme:

         "projects/{project}/locations/{location}/saas/{saas}" The arguments in this group can be used to specify the attributes of this resource. (NOTE) Some attributes are not given arguments in this group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument saas on the command line with a fully specified
        name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

     This must be specified.

       SAAS
          ID of the saas or fully qualified identifier for the saas.

          To set the saas attribute:
          ▸ provide the argument saas on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --location=LOCATION
          Location ID

          To set the location attribute:
          ▸ provide the argument saas on the command line with a fully
            specified name;
          ▸ provide the argument --location on the command line.

REQUIRED FLAGS
     --locations=[name=NAME]
        Required, List of locations that the service is available in. Rollout
        refers to the list to generate a rollout plan.

         name
            Name of location.

        Shorthand Example:

            --locations=name=string --locations=name=string

        JSON Example:

            --locations='[{"name": "string"}]'

        File Example:

            --locations=path_to_file.(yaml|json)

OPTIONAL FLAGS
     --labels=[LABELS,...]
        The labels on the resource, which can be used for categorization.
        similar to Kubernetes resource labels.

         KEY
            Keys must start with a lowercase character and contain only hyphens
            (-), underscores (_), lowercase characters, and numbers.

         VALUE
            Values must contain only hyphens (-), underscores (_), lowercase
            characters, and numbers.

        Shorthand Example:

            --labels=string=string

        JSON Example:

            --labels='{"string": "string"}'

        File Example:

            --labels=path_to_file.(yaml|json)

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the saasservicemgmt/v1beta1 API. The full documentation
    for this API can be found at: https://cloud.google.com/saas-runtime/docs

NOTES
    This command is currently in beta and might change without notice.

