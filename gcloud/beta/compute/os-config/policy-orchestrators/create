NAME
    gcloud beta compute os-config policy-orchestrators create - create a policy
        orchestrator

SYNOPSIS
    gcloud beta compute os-config policy-orchestrators create
        (POLICY_ORCHESTRATOR : --folder=FOLDER --organization=ORGANIZATION)
        --policy-type=POLICY_TYPE [--action=ACTION; default="upsert"] [--async]
        [--include-folders=INCLUDE_FOLDERS]
        [--include-locations=INCLUDE_LOCATIONS]
        [--include-projects=INCLUDE_PROJECTS] [--policy-file=POLICY_FILE]
        [--policy-id=POLICY_ID] [--state=STATE; default="ACTIVE"]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (BETA) Create a policy orchestrator.

EXAMPLES
    To create a policy orchestrator my-orchestrator in folder 123456 for OS
    policy assignment with config file /path/to/file/config.yaml, run:

        $ gcloud beta compute os-config policy-orchestrators create \
            my-orchestrator --folder=123456 \
            --policy-type os_policy_assignment_v1 \
            --policy-file=/path/to/file/config.yaml

    To create a policy orchestrator my-orchestrator in folder 123456 that
    deletes OS Policy assignments with id my-policy, run:

        $ gcloud beta compute os-config policy-orchestrators create \
            my-orchestrator --folder=123456 \
            --policy-type os_policy_assignment_v1 --action delete \
            --policy-id my-policy

POSITIONAL ARGUMENTS
     Policy orchestrator resource - Policy orchestrator to create. The
     arguments in this group can be used to specify the attributes of this
     resource. (NOTE) Some attributes are not given arguments in this group but
     can be set in other ways.

     To set the project attribute:
      ◆ provide the argument policy_orchestrator on the command line with a
        fully specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project. This resource can be one of the
        following types: [policy_orchestrator_project,
        policy_orchestrator_folder, policy_orchestrator_organization].

     This must be specified.

       POLICY_ORCHESTRATOR
          ID of the policy_orchestrator or fully qualified identifier for the
          policy_orchestrator.

          To set the policy_orchestrator attribute:
          ▸ provide the argument policy_orchestrator on the command line.

          This positional argument must be specified if any of the other
          arguments in this group are specified.

       --folder=FOLDER
          Folder of the policy_orchestrator.

          To set the folder attribute:
          ▸ provide the argument policy_orchestrator on the command line with
            a fully specified name;
          ▸ provide the argument --folder on the command line. Must be
            specified for resource of type [policy_orchestrator_folder].

       --organization=ORGANIZATION
          Organization of the policy_orchestrator.

          To set the organization attribute:
          ▸ provide the argument policy_orchestrator on the command line with
            a fully specified name;
          ▸ provide the argument --organization on the command line. Must be
            specified for resource of type [policy_orchestrator_organization].

REQUIRED FLAGS
     --policy-type=POLICY_TYPE
        Policy type to use. POLICY_TYPE must be (only one value is supported):

         os_policy_assignment_v1
            OS policy assignment v1.

OPTIONAL FLAGS
     --action=ACTION; default="upsert"
        Action to be taken on policy. ACTION must be one of:

         delete
            Delete a policy with a given name. policy-id must be specified.
         upsert
            Create or update a policy. policy-file must be specified.

     --async
        Return immediately, without waiting for the operation in progress to
        complete.

     --include-folders=INCLUDE_FOLDERS
        Applies policy to selected folders. Comma-separated list of folder
        numbers. Can beused together with --include-projects.

     --include-locations=INCLUDE_LOCATIONS
        Applies policy to selected locations, e.g. us-central1-a.

     --include-projects=INCLUDE_PROJECTS
        Applies policy to selected projects. Comma-separated list of project
        numbers. Can be used together with --include-folders.

     --policy-file=POLICY_FILE
        Absolute path to the OS policy assignment file on your local client.
        File must be in either JSON or YAML format. This file defines the OS
        policies that you want to apply to your VMs, the target VMs that you
        want to apply the policies to, and the rollout rate at which to apply
        the OS policies on a zonal level. For more information about this
        resource and sample OS policy assignment files, see
        https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies#os-policy-assignment.

     --policy-id=POLICY_ID
        Policy id. Must be specified for DELETE action.

     --state=STATE; default="ACTIVE"
        State of the policy orchestrator. STATE must be one of:

         active
            Creates a policy orchestrator in ACTIVE state.
         stopped
            Creates a policy orchestrator in STOPPED state.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

API REFERENCE
    This command uses the osconfig/v2beta API. The full documentation for this
    API can be found at: https://cloud.google.com/compute/docs/osconfig/rest

NOTES
    This command is currently in beta and might change without notice. These
    variants are also available:

        $ gcloud compute os-config policy-orchestrators create

        $ gcloud alpha compute os-config policy-orchestrators create

