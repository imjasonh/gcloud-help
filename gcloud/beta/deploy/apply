NAME
    gcloud beta deploy apply - applies a yaml configuration containing Delivery
        Pipeline(s), Target(s), Custom Target Type(s), Deploy Policy(ies), and
        Automation(s) declarative definitions

SYNOPSIS
    gcloud beta deploy apply --file=FILE [--region=REGION]
        [GCLOUD_WIDE_FLAG ...]

DESCRIPTION
    (BETA) Applies a yaml configuration containing Delivery Pipeline(s),
    Target(s), Custom Target Type(s), Deploy Policy(ies), and Automation(s)
    declarative definitions.

EXAMPLES
    To apply a Cloud Deploy YAML file deploy.yaml:

        $ gcloud beta deploy apply --file=deploy.yaml --region=us-central1

REQUIRED FLAGS
     --file=FILE
        Path to yaml file containing Delivery Pipeline(s), Target(s)
        declarative definitions.

OPTIONAL FLAGS
     Location resource - The Cloud region of {resource}. This represents a
     Cloud resource. (NOTE) Some attributes are not given arguments in this
     group but can be set in other ways.

     To set the project attribute:
      ◆ provide the argument --region on the command line with a fully
        specified name;
      ◆ set the property deploy/region with a fully specified name;
      ◆ provide the argument --project on the command line;
      ◆ set the property core/project.

       --region=REGION
          ID of the location or fully qualified identifier for the location.

          To set the region attribute:
          ▸ provide the argument --region on the command line;
          ▸ set the property deploy/region.

GCLOUD WIDE FLAGS
    These flags are available to all commands: --access-token-file, --account,
    --billing-project, --configuration, --flags-file, --flatten, --format,
    --help, --impersonate-service-account, --log-http, --project, --quiet,
    --trace-token, --user-output-enabled, --verbosity.

    Run $ gcloud help for details.

NOTES
    This command is currently in beta and might change without notice. These
    variants are also available:

        $ gcloud deploy apply

        $ gcloud alpha deploy apply

